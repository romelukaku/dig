{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?6c77","webpack:///./src/App.vue?97f5","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?fae4","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?3246","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?761e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/App.vue?3090","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","bytes","pubKey","PublicKey","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","charCodeAt","btoa","byteLength","String","fromCharCode","join","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","string","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","baseHeight","revisionNumber","revisionHeight","Height","uint64","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","hash","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","time","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","description","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","content","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","types","MsgCreateVestingAccount","MissingWalletError","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgCreateVestingAccount","initTxClient","vuexGetters","getStructure","template","structure","fields","field","V1Order","V1State","getDefaultState","_Structure","_Subscriptions","Set","namespaced","mutations","RESET_STATE","assign","QUERY","query","JSON","stringify","SUBSCRIBE","subscription","add","UNSUBSCRIBE","delete","getters","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","sendMsgCreateVestingAccount","msg","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","request","body","secure","path","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryChannels","method","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenTry","MsgChannelCloseInit","MsgChannelOpenAck","MsgChannelOpenConfirm","MsgTimeoutOnClose","MsgChannelCloseConfirm","MsgChannelOpenInit","MsgRecvPacket","MsgTimeout","MsgAcknowledgement","msgChannelOpenTry","msgChannelCloseInit","msgChannelOpenAck","msgChannelOpenConfirm","msgTimeoutOnClose","msgChannelCloseConfirm","msgChannelOpenInit","msgRecvPacket","msgTimeout","msgAcknowledgement","queryClient","initQueryClient","mergeResults","next_values","prop","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","options","subscribe","all","channel_id","port_id","QueryChannels","pagination","nextKey","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","revision_number","revision_height","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenTry","sendMsgChannelCloseInit","sendMsgChannelOpenAck","sendMsgChannelOpenConfirm","sendMsgTimeoutOnClose","sendMsgChannelCloseConfirm","sendMsgChannelOpenInit","sendMsgRecvPacket","sendMsgTimeout","sendMsgAcknowledgement","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryParams","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","msgWithdrawValidatorCommission","msgSetWithdrawAddress","msgFundCommunityPool","msgWithdrawDelegatorReward","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getParams","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","QueryParams","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorValidators","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgSetWithdrawAddress","sendMsgFundCommunityPool","sendMsgWithdrawDelegatorReward","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenTry","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenAck","msgConnectionOpenTry","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenAck","V1Beta1BondStatus","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","client_id","QueryConnectionClientState","QueryConnectionConsensusState","sendMsgConnectionOpenTry","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenAck","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","validatorAddr","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgUndelegate","msgCreateValidator","msgDelegate","msgBeginRedelegate","msgEditValidator","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgUndelegate","sendMsgCreateValidator","sendMsgDelegate","sendMsgBeginRedelegate","sendMsgEditValidator","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpdateClient","msgSubmitMisbehaviour","msgCreateClient","msgUpgradeClient","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","QueryClientStates","QueryConsensusState","QueryConsensusStates","QueryClientParams","sendMsgUpdateClient","sendMsgSubmitMisbehaviour","sendMsgCreateClient","sendMsgUpgradeClient","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","baseCoin","denom","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","V1Beta1ProposalStatus","V1Beta1VoteOption","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","queryTallyResult","queryVotes","queryVote","voter","MsgVote","MsgDeposit","MsgSubmitProposal","msgVote","msgDeposit","msgSubmitProposal","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgVote","sendMsgDeposit","sendMsgSubmitProposal","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","queryAllBalances","queryBalance","queryDenomsMetadata","queryDenomMetadata","queryTotalSupply","querySupplyOf","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgSend","msgMultiSend","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryDenomMetadata","QueryDenomsMetadata","sendMsgSend","sendMsgMultiSend","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","MsgUnjail","msgUnjail","SigningInfo","SigningInfos","ValidatorMissedBlocks","MissedBlock","ValidatorSigningInfo","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","CosmosCosmosSdkCosmosVestingV1Beta1","load","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkIbcCoreConnectionV1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkIbcCoreClientV1","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","id","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.4fec0880.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseMsgCreateClient = { signer: '' };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpdateClient = { clientId: '', signer: '' };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpgradeClient = { clientId: '', signer: '' };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviour = { clientId: '', signer: '' };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'CreateClient', data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpdateClient', data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpgradeClient', data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'SubmitMisbehaviour', data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { Header } from '../../tendermint/types/types';\nimport { ProofOps } from '../../tendermint/crypto/proof';\nimport { EvidenceParams, ValidatorParams, VersionParams } from '../../tendermint/types/params';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.abci';\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NEW':\n            return CheckTxType.NEW;\n        case 1:\n        case 'RECHECK':\n            return CheckTxType.RECHECK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return 'NEW';\n        case CheckTxType.RECHECK:\n            return 'RECHECK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case 'DUPLICATE_VOTE':\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case 'LIGHT_CLIENT_ATTACK':\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return 'UNKNOWN';\n        case EvidenceType.DUPLICATE_VOTE:\n            return 'DUPLICATE_VOTE';\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return 'LIGHT_CLIENT_ATTACK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case 'REJECT':\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case 'REJECT_FORMAT':\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case 'REJECT_SENDER':\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseOfferSnapshot_Result.ABORT:\n            return 'ABORT';\n        case ResponseOfferSnapshot_Result.REJECT:\n            return 'REJECT';\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return 'REJECT_FORMAT';\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return 'REJECT_SENDER';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case 'RETRY':\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case 'RETRY_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case 'REJECT_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return 'ABORT';\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return 'RETRY';\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return 'RETRY_SNAPSHOT';\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return 'REJECT_SNAPSHOT';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseRequestEcho = { message: '' };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    }\n};\nconst baseRequestInfo = { version: '', blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== '') {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestSetOption = { key: '', value: '' };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseRequestInitChain = { chainId: '', initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestQuery = { path: '', height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    }\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    }\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    }\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: '' };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseResponseException = { error: '' };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== '') {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEcho = { message: '' };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    }\n};\nconst baseResponseInfo = {\n    data: '',\n    version: '',\n    appVersion: 0,\n    lastBlockHeight: 0\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== '') {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseSetOption = { code: 0, log: '', info: '' };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    }\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: '',\n    info: '',\n    index: 0,\n    height: 0,\n    codespace: ''\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: ''\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    }\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => (e ? VoteInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEvent = { type: '' };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    }\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    }\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Echo', data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Flush', data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Info', data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'SetOption', data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'DeliverTx', data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'CheckTx', data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Query', data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Commit', data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'InitChain', data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'BeginBlock', data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'EndBlock', data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ListSnapshots', data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'OfferSnapshot', data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'LoadSnapshotChunk', data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ApplySnapshotChunk', data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../google/protobuf/duration';\nexport const protobufPackage = 'tendermint.types';\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    }\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorParams = { pubKeyTypes: '' };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined && (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: '' };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== '') {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { BaseAccount } from '../../../cosmos/auth/v1beta1/auth';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    }\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    }\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case 4:\n        case 'STATE_CLOSED':\n            return State.STATE_CLOSED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        case State.STATE_CLOSED:\n            return 'STATE_CLOSED';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'ORDER_NONE_UNSPECIFIED':\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case 'ORDER_UNORDERED':\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case 'ORDER_ORDERED':\n            return Order.ORDER_ORDERED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return 'ORDER_NONE_UNSPECIFIED';\n        case Order.ORDER_UNORDERED:\n            return 'ORDER_UNORDERED';\n        case Order.ORDER_ORDERED:\n            return 'ORDER_ORDERED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: ''\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    }\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: '',\n    portId: '',\n    channelId: ''\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== '') {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { portId: '', channelId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: '',\n    sourceChannel: '',\n    destinationPort: '',\n    destinationChannel: '',\n    timeoutTimestamp: 0\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== '') {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== '') {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== '') {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst basePacketState = { portId: '', channelId: '', sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Header } from '../../../tendermint/types/types';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BOND_STATUS_UNSPECIFIED':\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case 'BOND_STATUS_UNBONDED':\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case 'BOND_STATUS_UNBONDING':\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case 'BOND_STATUS_BONDED':\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return 'BOND_STATUS_UNSPECIFIED';\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return 'BOND_STATUS_UNBONDED';\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return 'BOND_STATUS_UNBONDING';\n        case BondStatus.BOND_STATUS_BONDED:\n            return 'BOND_STATUS_BONDED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommissionRates = { rate: '', maxRate: '', maxChangeRate: '' };\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== '') {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== '') {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== '') {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    }\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseDescription = {\n    moniker: '',\n    identity: '',\n    website: '',\n    securityContact: '',\n    details: ''\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== '') {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== '') {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== '') {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== '') {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    }\n};\nconst baseValidator = {\n    operatorAddress: '',\n    jailed: false,\n    status: 0,\n    tokens: '',\n    delegatorShares: '',\n    unbondingHeight: 0,\n    minSelfDelegation: ''\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== '') {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== '') {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== '') {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseValAddresses = { addresses: '' };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseDVPair = { delegatorAddress: '', validatorAddress: '' };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDVVTriplet = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegation = {\n    delegatorAddress: '',\n    validatorAddress: '',\n    shares: ''\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== '') {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    balance: ''\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    sharesDst: ''\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== '') {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegation = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: ''\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== '') {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    }\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance ? Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntryResponse = { balance: '' };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePool = { notBondedTokens: '', bondedTokens: '' };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== '') {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== '') {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from '@cosmjs/stargate'\nimport { Registry } from '@cosmjs/proto-signing'\nimport { Api } from './rest'\nimport { MsgCreateVestingAccount } from './types/cosmos/vesting/v1beta1/tx'\nconst types = [\n\t['/cosmos.vesting.v1beta1.MsgCreateVestingAccount', MsgCreateVestingAccount]\n]\nexport const MissingWalletError = new Error('wallet is required')\nconst registry = new Registry(types)\nconst defaultFee = {\n\tamount: [],\n\tgas: '200000'\n}\nconst txClient = async (\n\twallet,\n\t{ addr: addr } = { addr: 'http://localhost:26657' }\n) => {\n\tif (!wallet) throw MissingWalletError\n\tconst client = await SigningStargateClient.connectWithSigner(addr, wallet, {\n\t\tregistry\n\t})\n\tconst { address } = (await wallet.getAccounts())[0]\n\treturn {\n\t\tsignAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: '' }) =>\n\t\t\tclient.signAndBroadcast(address, msgs, fee, memo),\n\t\tmsgCreateVestingAccount: (data) => ({\n\t\t\ttypeUrl: '/cosmos.vesting.v1beta1.MsgCreateVestingAccount',\n\t\t\tvalue: data\n\t\t})\n\t}\n}\nconst queryClient = async (\n\t{ addr: addr } = { addr: 'http://localhost:1317' }\n) => {\n\treturn new Api({ baseUrl: addr })\n}\nexport { txClient, queryClient }\n","import { txClient, queryClient, MissingWalletError } from './module'\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex'\nimport { BaseVestingAccount } from './module/types/cosmos/vesting/v1beta1/vesting'\nimport { ContinuousVestingAccount } from './module/types/cosmos/vesting/v1beta1/vesting'\nimport { DelayedVestingAccount } from './module/types/cosmos/vesting/v1beta1/vesting'\nimport { Period } from './module/types/cosmos/vesting/v1beta1/vesting'\nimport { PeriodicVestingAccount } from './module/types/cosmos/vesting/v1beta1/vesting'\nexport {\n\tBaseVestingAccount,\n\tContinuousVestingAccount,\n\tDelayedVestingAccount,\n\tPeriod,\n\tPeriodicVestingAccount\n}\nasync function initTxClient(vuexGetters) {\n\treturn await txClient(vuexGetters['common/wallet/signer'], {\n\t\taddr: vuexGetters['common/env/apiTendermint']\n\t})\n}\nasync function initQueryClient(vuexGetters) {\n\treturn await queryClient({\n\t\taddr: vuexGetters['common/env/apiCosmos']\n\t})\n}\nfunction mergeResults(value, next_values) {\n\tfor (let prop of Object.keys(next_values)) {\n\t\tif (Array.isArray(next_values[prop])) {\n\t\t\tvalue[prop] = [...value[prop], ...next_values[prop]]\n\t\t} else {\n\t\t\tvalue[prop] = next_values[prop]\n\t\t}\n\t}\n\treturn value\n}\nfunction getStructure(template) {\n\tlet structure = { fields: [] }\n\tfor (const [key, value] of Object.entries(template)) {\n\t\tlet field = {}\n\t\tfield.name = key\n\t\tfield.type = typeof value\n\t\tstructure.fields.push(field)\n\t}\n\treturn structure\n}\nconst getDefaultState = () => {\n\treturn {\n\t\t_Structure: {\n\t\t\tBaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n\t\t\tContinuousVestingAccount: getStructure(\n\t\t\t\tContinuousVestingAccount.fromPartial({})\n\t\t\t),\n\t\t\tDelayedVestingAccount: getStructure(\n\t\t\t\tDelayedVestingAccount.fromPartial({})\n\t\t\t),\n\t\t\tPeriod: getStructure(Period.fromPartial({})),\n\t\t\tPeriodicVestingAccount: getStructure(\n\t\t\t\tPeriodicVestingAccount.fromPartial({})\n\t\t\t)\n\t\t},\n\t\t_Subscriptions: new Set()\n\t}\n}\n// initial state\nconst state = getDefaultState()\nexport default {\n\tnamespaced: true,\n\tstate,\n\tmutations: {\n\t\tRESET_STATE(state) {\n\t\t\tObject.assign(state, getDefaultState())\n\t\t},\n\t\tQUERY(state, { query, key, value }) {\n\t\t\tstate[query][JSON.stringify(key)] = value\n\t\t},\n\t\tSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.add(subscription)\n\t\t},\n\t\tUNSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.delete(subscription)\n\t\t}\n\t},\n\tgetters: {\n\t\tgetTypeStructure: (state) => (type) => {\n\t\t\treturn state._Structure[type].fields\n\t\t}\n\t},\n\tactions: {\n\t\tinit({ dispatch, rootGetters }) {\n\t\t\tconsole.log('Vuex module: cosmos.vesting.v1beta1 initialized!')\n\t\t\tif (rootGetters['common/env/client']) {\n\t\t\t\trootGetters['common/env/client'].on('newblock', () => {\n\t\t\t\t\tdispatch('StoreUpdate')\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tresetState({ commit }) {\n\t\t\tcommit('RESET_STATE')\n\t\t},\n\t\tunsubscribe({ commit }, subscription) {\n\t\t\tcommit('UNSUBSCRIBE', subscription)\n\t\t},\n\t\tasync StoreUpdate({ state, dispatch }) {\n\t\t\tstate._Subscriptions.forEach(async (subscription) => {\n\t\t\t\ttry {\n\t\t\t\t\tawait dispatch(subscription.action, subscription.payload)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new SpVuexError('Subscriptions: ' + e.message)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tasync sendMsgCreateVestingAccount(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgCreateVestingAccount(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgCreateVestingAccount:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgCreateVestingAccount:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgCreateVestingAccount({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgCreateVestingAccount(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgCreateVestingAccount:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgCreateVestingAccount:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/channel.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from '@cosmjs/stargate'\nimport { Registry } from '@cosmjs/proto-signing'\nimport { Api } from './rest'\nimport { MsgChannelOpenTry } from './types/ibc/core/channel/v1/tx'\nimport { MsgChannelCloseInit } from './types/ibc/core/channel/v1/tx'\nimport { MsgChannelOpenAck } from './types/ibc/core/channel/v1/tx'\nimport { MsgChannelOpenConfirm } from './types/ibc/core/channel/v1/tx'\nimport { MsgTimeoutOnClose } from './types/ibc/core/channel/v1/tx'\nimport { MsgChannelCloseConfirm } from './types/ibc/core/channel/v1/tx'\nimport { MsgChannelOpenInit } from './types/ibc/core/channel/v1/tx'\nimport { MsgRecvPacket } from './types/ibc/core/channel/v1/tx'\nimport { MsgTimeout } from './types/ibc/core/channel/v1/tx'\nimport { MsgAcknowledgement } from './types/ibc/core/channel/v1/tx'\nconst types = [\n\t['/ibc.core.channel.v1.MsgChannelOpenTry', MsgChannelOpenTry],\n\t['/ibc.core.channel.v1.MsgChannelCloseInit', MsgChannelCloseInit],\n\t['/ibc.core.channel.v1.MsgChannelOpenAck', MsgChannelOpenAck],\n\t['/ibc.core.channel.v1.MsgChannelOpenConfirm', MsgChannelOpenConfirm],\n\t['/ibc.core.channel.v1.MsgTimeoutOnClose', MsgTimeoutOnClose],\n\t['/ibc.core.channel.v1.MsgChannelCloseConfirm', MsgChannelCloseConfirm],\n\t['/ibc.core.channel.v1.MsgChannelOpenInit', MsgChannelOpenInit],\n\t['/ibc.core.channel.v1.MsgRecvPacket', MsgRecvPacket],\n\t['/ibc.core.channel.v1.MsgTimeout', MsgTimeout],\n\t['/ibc.core.channel.v1.MsgAcknowledgement', MsgAcknowledgement]\n]\nexport const MissingWalletError = new Error('wallet is required')\nconst registry = new Registry(types)\nconst defaultFee = {\n\tamount: [],\n\tgas: '200000'\n}\nconst txClient = async (\n\twallet,\n\t{ addr: addr } = { addr: 'http://localhost:26657' }\n) => {\n\tif (!wallet) throw MissingWalletError\n\tconst client = await SigningStargateClient.connectWithSigner(addr, wallet, {\n\t\tregistry\n\t})\n\tconst { address } = (await wallet.getAccounts())[0]\n\treturn {\n\t\tsignAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: '' }) =>\n\t\t\tclient.signAndBroadcast(address, msgs, fee, memo),\n\t\tmsgChannelOpenTry: (data) => ({\n\t\t\ttypeUrl: '/ibc.core.channel.v1.MsgChannelOpenTry',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgChannelCloseInit: (data) => ({\n\t\t\ttypeUrl: '/ibc.core.channel.v1.MsgChannelCloseInit',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgChannelOpenAck: (data) => ({\n\t\t\ttypeUrl: '/ibc.core.channel.v1.MsgChannelOpenAck',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgChannelOpenConfirm: (data) => ({\n\t\t\ttypeUrl: '/ibc.core.channel.v1.MsgChannelOpenConfirm',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgTimeoutOnClose: (data) => ({\n\t\t\ttypeUrl: '/ibc.core.channel.v1.MsgTimeoutOnClose',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgChannelCloseConfirm: (data) => ({\n\t\t\ttypeUrl: '/ibc.core.channel.v1.MsgChannelCloseConfirm',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgChannelOpenInit: (data) => ({\n\t\t\ttypeUrl: '/ibc.core.channel.v1.MsgChannelOpenInit',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgRecvPacket: (data) => ({\n\t\t\ttypeUrl: '/ibc.core.channel.v1.MsgRecvPacket',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgTimeout: (data) => ({\n\t\t\ttypeUrl: '/ibc.core.channel.v1.MsgTimeout',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgAcknowledgement: (data) => ({\n\t\t\ttypeUrl: '/ibc.core.channel.v1.MsgAcknowledgement',\n\t\t\tvalue: data\n\t\t})\n\t}\n}\nconst queryClient = async (\n\t{ addr: addr } = { addr: 'http://localhost:1317' }\n) => {\n\treturn new Api({ baseUrl: addr })\n}\nexport { txClient, queryClient }\n","import { txClient, queryClient, MissingWalletError } from './module'\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex'\nimport { Channel } from './module/types/ibc/core/channel/v1/channel'\nimport { IdentifiedChannel } from './module/types/ibc/core/channel/v1/channel'\nimport { Counterparty } from './module/types/ibc/core/channel/v1/channel'\nimport { Packet } from './module/types/ibc/core/channel/v1/channel'\nimport { PacketState } from './module/types/ibc/core/channel/v1/channel'\nimport { Acknowledgement } from './module/types/ibc/core/channel/v1/channel'\nimport { PacketSequence } from './module/types/ibc/core/channel/v1/genesis'\nexport {\n\tChannel,\n\tIdentifiedChannel,\n\tCounterparty,\n\tPacket,\n\tPacketState,\n\tAcknowledgement,\n\tPacketSequence\n}\nasync function initTxClient(vuexGetters) {\n\treturn await txClient(vuexGetters['common/wallet/signer'], {\n\t\taddr: vuexGetters['common/env/apiTendermint']\n\t})\n}\nasync function initQueryClient(vuexGetters) {\n\treturn await queryClient({\n\t\taddr: vuexGetters['common/env/apiCosmos']\n\t})\n}\nfunction mergeResults(value, next_values) {\n\tfor (let prop of Object.keys(next_values)) {\n\t\tif (Array.isArray(next_values[prop])) {\n\t\t\tvalue[prop] = [...value[prop], ...next_values[prop]]\n\t\t} else {\n\t\t\tvalue[prop] = next_values[prop]\n\t\t}\n\t}\n\treturn value\n}\nfunction getStructure(template) {\n\tlet structure = { fields: [] }\n\tfor (const [key, value] of Object.entries(template)) {\n\t\tlet field = {}\n\t\tfield.name = key\n\t\tfield.type = typeof value\n\t\tstructure.fields.push(field)\n\t}\n\treturn structure\n}\nconst getDefaultState = () => {\n\treturn {\n\t\tChannel: {},\n\t\tChannels: {},\n\t\tConnectionChannels: {},\n\t\tChannelClientState: {},\n\t\tChannelConsensusState: {},\n\t\tPacketCommitment: {},\n\t\tPacketCommitments: {},\n\t\tPacketReceipt: {},\n\t\tPacketAcknowledgement: {},\n\t\tPacketAcknowledgements: {},\n\t\tUnreceivedPackets: {},\n\t\tUnreceivedAcks: {},\n\t\tNextSequenceReceive: {},\n\t\t_Structure: {\n\t\t\tChannel: getStructure(Channel.fromPartial({})),\n\t\t\tIdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n\t\t\tCounterparty: getStructure(Counterparty.fromPartial({})),\n\t\t\tPacket: getStructure(Packet.fromPartial({})),\n\t\t\tPacketState: getStructure(PacketState.fromPartial({})),\n\t\t\tAcknowledgement: getStructure(Acknowledgement.fromPartial({})),\n\t\t\tPacketSequence: getStructure(PacketSequence.fromPartial({}))\n\t\t},\n\t\t_Subscriptions: new Set()\n\t}\n}\n// initial state\nconst state = getDefaultState()\nexport default {\n\tnamespaced: true,\n\tstate,\n\tmutations: {\n\t\tRESET_STATE(state) {\n\t\t\tObject.assign(state, getDefaultState())\n\t\t},\n\t\tQUERY(state, { query, key, value }) {\n\t\t\tstate[query][JSON.stringify(key)] = value\n\t\t},\n\t\tSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.add(subscription)\n\t\t},\n\t\tUNSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.delete(subscription)\n\t\t}\n\t},\n\tgetters: {\n\t\tgetChannel: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Channel[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetChannels: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Channels[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetConnectionChannels: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.ConnectionChannels[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetChannelClientState: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.ChannelClientState[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetChannelConsensusState: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.ChannelConsensusState[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetPacketCommitment: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.PacketCommitment[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetPacketCommitments: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.PacketCommitments[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetPacketReceipt: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.PacketReceipt[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetPacketAcknowledgement: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.PacketAcknowledgement[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetPacketAcknowledgements: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.PacketAcknowledgements[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetUnreceivedPackets: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.UnreceivedPackets[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetUnreceivedAcks: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.UnreceivedAcks[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetNextSequenceReceive: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.NextSequenceReceive[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetTypeStructure: (state) => (type) => {\n\t\t\treturn state._Structure[type].fields\n\t\t}\n\t},\n\tactions: {\n\t\tinit({ dispatch, rootGetters }) {\n\t\t\tconsole.log('Vuex module: ibc.core.channel.v1 initialized!')\n\t\t\tif (rootGetters['common/env/client']) {\n\t\t\t\trootGetters['common/env/client'].on('newblock', () => {\n\t\t\t\t\tdispatch('StoreUpdate')\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tresetState({ commit }) {\n\t\t\tcommit('RESET_STATE')\n\t\t},\n\t\tunsubscribe({ commit }, subscription) {\n\t\t\tcommit('UNSUBSCRIBE', subscription)\n\t\t},\n\t\tasync StoreUpdate({ state, dispatch }) {\n\t\t\tstate._Subscriptions.forEach(async (subscription) => {\n\t\t\t\ttry {\n\t\t\t\t\tawait dispatch(subscription.action, subscription.payload)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new SpVuexError('Subscriptions: ' + e.message)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tasync QueryChannel(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryChannel(key.channel_id, key.port_id)\n\t\t\t\t).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Channel',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryChannel',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getChannel']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryChannel',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryChannels(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryChannels(query)).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryChannels({\n\t\t\t\t\t\t\t...query,\n\t\t\t\t\t\t\t'pagination.key': value.pagination.nextKey\n\t\t\t\t\t\t})\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Channels',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryChannels',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getChannels']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryChannels',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryConnectionChannels(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryConnectionChannels(key.connection, query)\n\t\t\t\t).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryConnectionChannels(key.connection, {\n\t\t\t\t\t\t\t...query,\n\t\t\t\t\t\t\t'pagination.key': value.pagination.nextKey\n\t\t\t\t\t\t})\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'ConnectionChannels',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryConnectionChannels',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getConnectionChannels']({ params: { ...key }, query }) ?? {}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryConnectionChannels',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryChannelClientState(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryChannelClientState(key.channel_id, key.port_id)\n\t\t\t\t).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'ChannelClientState',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryChannelClientState',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getChannelClientState']({ params: { ...key }, query }) ?? {}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryChannelClientState',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryChannelConsensusState(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryChannelConsensusState(\n\t\t\t\t\t\tkey.channel_id,\n\t\t\t\t\t\tkey.port_id,\n\t\t\t\t\t\tkey.revision_number,\n\t\t\t\t\t\tkey.revision_height\n\t\t\t\t\t)\n\t\t\t\t).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'ChannelConsensusState',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryChannelConsensusState',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getChannelConsensusState']({ params: { ...key }, query }) ??\n\t\t\t\t\t{}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryChannelConsensusState',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryPacketCommitment(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryPacketCommitment(\n\t\t\t\t\t\tkey.channel_id,\n\t\t\t\t\t\tkey.port_id,\n\t\t\t\t\t\tkey.sequence\n\t\t\t\t\t)\n\t\t\t\t).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'PacketCommitment',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryPacketCommitment',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getPacketCommitment']({ params: { ...key }, query }) ?? {}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryPacketCommitment',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryPacketCommitments(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryPacketCommitments(\n\t\t\t\t\t\tkey.channel_id,\n\t\t\t\t\t\tkey.port_id,\n\t\t\t\t\t\tquery\n\t\t\t\t\t)\n\t\t\t\t).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryPacketCommitments(\n\t\t\t\t\t\t\tkey.channel_id,\n\t\t\t\t\t\t\tkey.port_id,\n\t\t\t\t\t\t\t{ ...query, 'pagination.key': value.pagination.nextKey }\n\t\t\t\t\t\t)\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'PacketCommitments',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryPacketCommitments',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getPacketCommitments']({ params: { ...key }, query }) ?? {}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryPacketCommitments',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryPacketReceipt(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryPacketReceipt(\n\t\t\t\t\t\tkey.channel_id,\n\t\t\t\t\t\tkey.port_id,\n\t\t\t\t\t\tkey.sequence\n\t\t\t\t\t)\n\t\t\t\t).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'PacketReceipt',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryPacketReceipt',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getPacketReceipt']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryPacketReceipt',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryPacketAcknowledgement(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryPacketAcknowledgement(\n\t\t\t\t\t\tkey.channel_id,\n\t\t\t\t\t\tkey.port_id,\n\t\t\t\t\t\tkey.sequence\n\t\t\t\t\t)\n\t\t\t\t).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'PacketAcknowledgement',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryPacketAcknowledgement',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getPacketAcknowledgement']({ params: { ...key }, query }) ??\n\t\t\t\t\t{}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryPacketAcknowledgement',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryPacketAcknowledgements(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryPacketAcknowledgements(\n\t\t\t\t\t\tkey.channel_id,\n\t\t\t\t\t\tkey.port_id,\n\t\t\t\t\t\tquery\n\t\t\t\t\t)\n\t\t\t\t).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryPacketAcknowledgements(\n\t\t\t\t\t\t\tkey.channel_id,\n\t\t\t\t\t\t\tkey.port_id,\n\t\t\t\t\t\t\t{ ...query, 'pagination.key': value.pagination.nextKey }\n\t\t\t\t\t\t)\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'PacketAcknowledgements',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryPacketAcknowledgements',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getPacketAcknowledgements']({ params: { ...key }, query }) ??\n\t\t\t\t\t{}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryPacketAcknowledgements',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryUnreceivedPackets(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryUnreceivedPackets(\n\t\t\t\t\t\tkey.channel_id,\n\t\t\t\t\t\tkey.port_id,\n\t\t\t\t\t\tkey.packet_commitment_sequences\n\t\t\t\t\t)\n\t\t\t\t).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'UnreceivedPackets',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryUnreceivedPackets',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryUnreceivedPackets',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryUnreceivedAcks(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryUnreceivedAcks(\n\t\t\t\t\t\tkey.channel_id,\n\t\t\t\t\t\tkey.port_id,\n\t\t\t\t\t\tkey.packet_ack_sequences\n\t\t\t\t\t)\n\t\t\t\t).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'UnreceivedAcks',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryUnreceivedAcks',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryUnreceivedAcks',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryNextSequenceReceive(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryNextSequenceReceive(\n\t\t\t\t\t\tkey.channel_id,\n\t\t\t\t\t\tkey.port_id\n\t\t\t\t\t)\n\t\t\t\t).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'NextSequenceReceive',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryNextSequenceReceive',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryNextSequenceReceive',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync sendMsgChannelOpenTry(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgChannelOpenTry(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelOpenTry:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelOpenTry:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgChannelCloseInit(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgChannelCloseInit(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelCloseInit:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelCloseInit:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgChannelOpenAck(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgChannelOpenAck(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelOpenAck:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelOpenAck:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgChannelOpenConfirm(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgChannelOpenConfirm(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelOpenConfirm:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelOpenConfirm:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgTimeoutOnClose(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgTimeoutOnClose(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgTimeoutOnClose:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgTimeoutOnClose:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgChannelCloseConfirm(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgChannelCloseConfirm(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelCloseConfirm:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelCloseConfirm:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgChannelOpenInit(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgChannelOpenInit(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelOpenInit:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelOpenInit:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgRecvPacket({ rootGetters }, { value, fee = [], memo = '' }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgRecvPacket(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgRecvPacket:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgRecvPacket:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgTimeout({ rootGetters }, { value, fee = [], memo = '' }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgTimeout(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgTimeout:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgTimeout:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgAcknowledgement(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgAcknowledgement(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgAcknowledgement:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgAcknowledgement:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgChannelOpenTry({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgChannelOpenTry(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelOpenTry:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelOpenTry:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgChannelCloseInit({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgChannelCloseInit(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelCloseInit:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelCloseInit:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgChannelOpenAck({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgChannelOpenAck(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelOpenAck:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelOpenAck:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgChannelOpenConfirm({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgChannelOpenConfirm(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelOpenConfirm:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelOpenConfirm:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgTimeoutOnClose({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgTimeoutOnClose(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgTimeoutOnClose:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgTimeoutOnClose:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgChannelCloseConfirm({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgChannelCloseConfirm(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelCloseConfirm:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelCloseConfirm:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgChannelOpenInit({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgChannelOpenInit(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelOpenInit:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgChannelOpenInit:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgRecvPacket({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgRecvPacket(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgRecvPacket:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgRecvPacket:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgTimeout({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgTimeout(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgTimeout:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgTimeout:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgAcknowledgement({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgAcknowledgement(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgAcknowledgement:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgAcknowledgement:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/distribution.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: '' };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    }\n};\nconst baseMsgFundCommunityPool = { depositor: '' };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'SetWithdrawAddress', data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawDelegatorReward', data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawValidatorCommission', data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'FundCommunityPool', data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from '@cosmjs/stargate'\nimport { Registry } from '@cosmjs/proto-signing'\nimport { Api } from './rest'\nimport { MsgWithdrawValidatorCommission } from './types/cosmos/distribution/v1beta1/tx'\nimport { MsgSetWithdrawAddress } from './types/cosmos/distribution/v1beta1/tx'\nimport { MsgFundCommunityPool } from './types/cosmos/distribution/v1beta1/tx'\nimport { MsgWithdrawDelegatorReward } from './types/cosmos/distribution/v1beta1/tx'\nconst types = [\n\t[\n\t\t'/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission',\n\t\tMsgWithdrawValidatorCommission\n\t],\n\t['/cosmos.distribution.v1beta1.MsgSetWithdrawAddress', MsgSetWithdrawAddress],\n\t['/cosmos.distribution.v1beta1.MsgFundCommunityPool', MsgFundCommunityPool],\n\t[\n\t\t'/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward',\n\t\tMsgWithdrawDelegatorReward\n\t]\n]\nexport const MissingWalletError = new Error('wallet is required')\nconst registry = new Registry(types)\nconst defaultFee = {\n\tamount: [],\n\tgas: '200000'\n}\nconst txClient = async (\n\twallet,\n\t{ addr: addr } = { addr: 'http://localhost:26657' }\n) => {\n\tif (!wallet) throw MissingWalletError\n\tconst client = await SigningStargateClient.connectWithSigner(addr, wallet, {\n\t\tregistry\n\t})\n\tconst { address } = (await wallet.getAccounts())[0]\n\treturn {\n\t\tsignAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: '' }) =>\n\t\t\tclient.signAndBroadcast(address, msgs, fee, memo),\n\t\tmsgWithdrawValidatorCommission: (data) => ({\n\t\t\ttypeUrl: '/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgSetWithdrawAddress: (data) => ({\n\t\t\ttypeUrl: '/cosmos.distribution.v1beta1.MsgSetWithdrawAddress',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgFundCommunityPool: (data) => ({\n\t\t\ttypeUrl: '/cosmos.distribution.v1beta1.MsgFundCommunityPool',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgWithdrawDelegatorReward: (data) => ({\n\t\t\ttypeUrl: '/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward',\n\t\t\tvalue: data\n\t\t})\n\t}\n}\nconst queryClient = async (\n\t{ addr: addr } = { addr: 'http://localhost:1317' }\n) => {\n\treturn new Api({ baseUrl: addr })\n}\nexport { txClient, queryClient }\n","import { txClient, queryClient, MissingWalletError } from './module'\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex'\nimport { Params } from './module/types/cosmos/distribution/v1beta1/distribution'\nimport { ValidatorHistoricalRewards } from './module/types/cosmos/distribution/v1beta1/distribution'\nimport { ValidatorCurrentRewards } from './module/types/cosmos/distribution/v1beta1/distribution'\nimport { ValidatorAccumulatedCommission } from './module/types/cosmos/distribution/v1beta1/distribution'\nimport { ValidatorOutstandingRewards } from './module/types/cosmos/distribution/v1beta1/distribution'\nimport { ValidatorSlashEvent } from './module/types/cosmos/distribution/v1beta1/distribution'\nimport { ValidatorSlashEvents } from './module/types/cosmos/distribution/v1beta1/distribution'\nimport { FeePool } from './module/types/cosmos/distribution/v1beta1/distribution'\nimport { CommunityPoolSpendProposal } from './module/types/cosmos/distribution/v1beta1/distribution'\nimport { DelegatorStartingInfo } from './module/types/cosmos/distribution/v1beta1/distribution'\nimport { DelegationDelegatorReward } from './module/types/cosmos/distribution/v1beta1/distribution'\nimport { CommunityPoolSpendProposalWithDeposit } from './module/types/cosmos/distribution/v1beta1/distribution'\nimport { DelegatorWithdrawInfo } from './module/types/cosmos/distribution/v1beta1/genesis'\nimport { ValidatorOutstandingRewardsRecord } from './module/types/cosmos/distribution/v1beta1/genesis'\nimport { ValidatorAccumulatedCommissionRecord } from './module/types/cosmos/distribution/v1beta1/genesis'\nimport { ValidatorHistoricalRewardsRecord } from './module/types/cosmos/distribution/v1beta1/genesis'\nimport { ValidatorCurrentRewardsRecord } from './module/types/cosmos/distribution/v1beta1/genesis'\nimport { DelegatorStartingInfoRecord } from './module/types/cosmos/distribution/v1beta1/genesis'\nimport { ValidatorSlashEventRecord } from './module/types/cosmos/distribution/v1beta1/genesis'\nexport {\n\tParams,\n\tValidatorHistoricalRewards,\n\tValidatorCurrentRewards,\n\tValidatorAccumulatedCommission,\n\tValidatorOutstandingRewards,\n\tValidatorSlashEvent,\n\tValidatorSlashEvents,\n\tFeePool,\n\tCommunityPoolSpendProposal,\n\tDelegatorStartingInfo,\n\tDelegationDelegatorReward,\n\tCommunityPoolSpendProposalWithDeposit,\n\tDelegatorWithdrawInfo,\n\tValidatorOutstandingRewardsRecord,\n\tValidatorAccumulatedCommissionRecord,\n\tValidatorHistoricalRewardsRecord,\n\tValidatorCurrentRewardsRecord,\n\tDelegatorStartingInfoRecord,\n\tValidatorSlashEventRecord\n}\nasync function initTxClient(vuexGetters) {\n\treturn await txClient(vuexGetters['common/wallet/signer'], {\n\t\taddr: vuexGetters['common/env/apiTendermint']\n\t})\n}\nasync function initQueryClient(vuexGetters) {\n\treturn await queryClient({\n\t\taddr: vuexGetters['common/env/apiCosmos']\n\t})\n}\nfunction mergeResults(value, next_values) {\n\tfor (let prop of Object.keys(next_values)) {\n\t\tif (Array.isArray(next_values[prop])) {\n\t\t\tvalue[prop] = [...value[prop], ...next_values[prop]]\n\t\t} else {\n\t\t\tvalue[prop] = next_values[prop]\n\t\t}\n\t}\n\treturn value\n}\nfunction getStructure(template) {\n\tlet structure = { fields: [] }\n\tfor (const [key, value] of Object.entries(template)) {\n\t\tlet field = {}\n\t\tfield.name = key\n\t\tfield.type = typeof value\n\t\tstructure.fields.push(field)\n\t}\n\treturn structure\n}\nconst getDefaultState = () => {\n\treturn {\n\t\tParams: {},\n\t\tValidatorOutstandingRewards: {},\n\t\tValidatorCommission: {},\n\t\tValidatorSlashes: {},\n\t\tDelegationRewards: {},\n\t\tDelegationTotalRewards: {},\n\t\tDelegatorValidators: {},\n\t\tDelegatorWithdrawAddress: {},\n\t\tCommunityPool: {},\n\t\t_Structure: {\n\t\t\tParams: getStructure(Params.fromPartial({})),\n\t\t\tValidatorHistoricalRewards: getStructure(\n\t\t\t\tValidatorHistoricalRewards.fromPartial({})\n\t\t\t),\n\t\t\tValidatorCurrentRewards: getStructure(\n\t\t\t\tValidatorCurrentRewards.fromPartial({})\n\t\t\t),\n\t\t\tValidatorAccumulatedCommission: getStructure(\n\t\t\t\tValidatorAccumulatedCommission.fromPartial({})\n\t\t\t),\n\t\t\tValidatorOutstandingRewards: getStructure(\n\t\t\t\tValidatorOutstandingRewards.fromPartial({})\n\t\t\t),\n\t\t\tValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n\t\t\tValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n\t\t\tFeePool: getStructure(FeePool.fromPartial({})),\n\t\t\tCommunityPoolSpendProposal: getStructure(\n\t\t\t\tCommunityPoolSpendProposal.fromPartial({})\n\t\t\t),\n\t\t\tDelegatorStartingInfo: getStructure(\n\t\t\t\tDelegatorStartingInfo.fromPartial({})\n\t\t\t),\n\t\t\tDelegationDelegatorReward: getStructure(\n\t\t\t\tDelegationDelegatorReward.fromPartial({})\n\t\t\t),\n\t\t\tCommunityPoolSpendProposalWithDeposit: getStructure(\n\t\t\t\tCommunityPoolSpendProposalWithDeposit.fromPartial({})\n\t\t\t),\n\t\t\tDelegatorWithdrawInfo: getStructure(\n\t\t\t\tDelegatorWithdrawInfo.fromPartial({})\n\t\t\t),\n\t\t\tValidatorOutstandingRewardsRecord: getStructure(\n\t\t\t\tValidatorOutstandingRewardsRecord.fromPartial({})\n\t\t\t),\n\t\t\tValidatorAccumulatedCommissionRecord: getStructure(\n\t\t\t\tValidatorAccumulatedCommissionRecord.fromPartial({})\n\t\t\t),\n\t\t\tValidatorHistoricalRewardsRecord: getStructure(\n\t\t\t\tValidatorHistoricalRewardsRecord.fromPartial({})\n\t\t\t),\n\t\t\tValidatorCurrentRewardsRecord: getStructure(\n\t\t\t\tValidatorCurrentRewardsRecord.fromPartial({})\n\t\t\t),\n\t\t\tDelegatorStartingInfoRecord: getStructure(\n\t\t\t\tDelegatorStartingInfoRecord.fromPartial({})\n\t\t\t),\n\t\t\tValidatorSlashEventRecord: getStructure(\n\t\t\t\tValidatorSlashEventRecord.fromPartial({})\n\t\t\t)\n\t\t},\n\t\t_Subscriptions: new Set()\n\t}\n}\n// initial state\nconst state = getDefaultState()\nexport default {\n\tnamespaced: true,\n\tstate,\n\tmutations: {\n\t\tRESET_STATE(state) {\n\t\t\tObject.assign(state, getDefaultState())\n\t\t},\n\t\tQUERY(state, { query, key, value }) {\n\t\t\tstate[query][JSON.stringify(key)] = value\n\t\t},\n\t\tSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.add(subscription)\n\t\t},\n\t\tUNSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.delete(subscription)\n\t\t}\n\t},\n\tgetters: {\n\t\tgetParams: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Params[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetValidatorOutstandingRewards: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetValidatorCommission: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.ValidatorCommission[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetValidatorSlashes: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.ValidatorSlashes[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetDelegationRewards: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.DelegationRewards[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetDelegationTotalRewards: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.DelegationTotalRewards[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetDelegatorValidators: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.DelegatorValidators[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetDelegatorWithdrawAddress: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetCommunityPool: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.CommunityPool[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetTypeStructure: (state) => (type) => {\n\t\t\treturn state._Structure[type].fields\n\t\t}\n\t},\n\tactions: {\n\t\tinit({ dispatch, rootGetters }) {\n\t\t\tconsole.log('Vuex module: cosmos.distribution.v1beta1 initialized!')\n\t\t\tif (rootGetters['common/env/client']) {\n\t\t\t\trootGetters['common/env/client'].on('newblock', () => {\n\t\t\t\t\tdispatch('StoreUpdate')\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tresetState({ commit }) {\n\t\t\tcommit('RESET_STATE')\n\t\t},\n\t\tunsubscribe({ commit }, subscription) {\n\t\t\tcommit('UNSUBSCRIBE', subscription)\n\t\t},\n\t\tasync StoreUpdate({ state, dispatch }) {\n\t\t\tstate._Subscriptions.forEach(async (subscription) => {\n\t\t\t\ttry {\n\t\t\t\t\tawait dispatch(subscription.action, subscription.payload)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new SpVuexError('Subscriptions: ' + e.message)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tasync QueryParams(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryParams()).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Params',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryParams',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getParams']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryParams',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryValidatorOutstandingRewards(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryValidatorOutstandingRewards(\n\t\t\t\t\t\tkey.validator_address\n\t\t\t\t\t)\n\t\t\t\t).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'ValidatorOutstandingRewards',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryValidatorOutstandingRewards',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getValidatorOutstandingRewards']({\n\t\t\t\t\t\tparams: { ...key },\n\t\t\t\t\t\tquery\n\t\t\t\t\t}) ?? {}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryValidatorOutstandingRewards',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryValidatorCommission(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryValidatorCommission(key.validator_address)\n\t\t\t\t).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'ValidatorCommission',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryValidatorCommission',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getValidatorCommission']({ params: { ...key }, query }) ?? {}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryValidatorCommission',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryValidatorSlashes(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryValidatorSlashes(key.validator_address, query)\n\t\t\t\t).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryValidatorSlashes(key.validator_address, {\n\t\t\t\t\t\t\t...query,\n\t\t\t\t\t\t\t'pagination.key': value.pagination.nextKey\n\t\t\t\t\t\t})\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'ValidatorSlashes',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryValidatorSlashes',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getValidatorSlashes']({ params: { ...key }, query }) ?? {}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryValidatorSlashes',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryDelegationRewards(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryDelegationRewards(\n\t\t\t\t\t\tkey.delegator_address,\n\t\t\t\t\t\tkey.validator_address\n\t\t\t\t\t)\n\t\t\t\t).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'DelegationRewards',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryDelegationRewards',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getDelegationRewards']({ params: { ...key }, query }) ?? {}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryDelegationRewards',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryDelegationTotalRewards(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryDelegationTotalRewards(key.delegator_address)\n\t\t\t\t).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'DelegationTotalRewards',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryDelegationTotalRewards',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getDelegationTotalRewards']({ params: { ...key }, query }) ??\n\t\t\t\t\t{}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryDelegationTotalRewards',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryDelegatorValidators(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryDelegatorValidators(key.delegator_address)\n\t\t\t\t).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'DelegatorValidators',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryDelegatorValidators',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getDelegatorValidators']({ params: { ...key }, query }) ?? {}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryDelegatorValidators',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryDelegatorWithdrawAddress(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryDelegatorWithdrawAddress(key.delegator_address)\n\t\t\t\t).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'DelegatorWithdrawAddress',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryDelegatorWithdrawAddress',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getDelegatorWithdrawAddress']({\n\t\t\t\t\t\tparams: { ...key },\n\t\t\t\t\t\tquery\n\t\t\t\t\t}) ?? {}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryDelegatorWithdrawAddress',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryCommunityPool(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryCommunityPool()).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'CommunityPool',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryCommunityPool',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getCommunityPool']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryCommunityPool',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync sendMsgWithdrawValidatorCommission(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgWithdrawValidatorCommission(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgWithdrawValidatorCommission:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgWithdrawValidatorCommission:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgSetWithdrawAddress(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgSetWithdrawAddress(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgSetWithdrawAddress:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgSetWithdrawAddress:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgFundCommunityPool(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgFundCommunityPool(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgFundCommunityPool:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgFundCommunityPool:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgWithdrawDelegatorReward(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgWithdrawDelegatorReward(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgWithdrawDelegatorReward:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgWithdrawDelegatorReward:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgWithdrawValidatorCommission(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgWithdrawValidatorCommission:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgWithdrawValidatorCommission:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgSetWithdrawAddress({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgSetWithdrawAddress(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgSetWithdrawAddress:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgSetWithdrawAddress:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgFundCommunityPool({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgFundCommunityPool(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgFundCommunityPool:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgFundCommunityPool:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgWithdrawDelegatorReward(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgWithdrawDelegatorReward:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgWithdrawDelegatorReward:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/connection.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from '@cosmjs/stargate'\nimport { Registry } from '@cosmjs/proto-signing'\nimport { Api } from './rest'\nimport { MsgConnectionOpenTry } from './types/ibc/core/connection/v1/tx'\nimport { MsgConnectionOpenConfirm } from './types/ibc/core/connection/v1/tx'\nimport { MsgConnectionOpenInit } from './types/ibc/core/connection/v1/tx'\nimport { MsgConnectionOpenAck } from './types/ibc/core/connection/v1/tx'\nconst types = [\n\t['/ibc.core.connection.v1.MsgConnectionOpenTry', MsgConnectionOpenTry],\n\t[\n\t\t'/ibc.core.connection.v1.MsgConnectionOpenConfirm',\n\t\tMsgConnectionOpenConfirm\n\t],\n\t['/ibc.core.connection.v1.MsgConnectionOpenInit', MsgConnectionOpenInit],\n\t['/ibc.core.connection.v1.MsgConnectionOpenAck', MsgConnectionOpenAck]\n]\nexport const MissingWalletError = new Error('wallet is required')\nconst registry = new Registry(types)\nconst defaultFee = {\n\tamount: [],\n\tgas: '200000'\n}\nconst txClient = async (\n\twallet,\n\t{ addr: addr } = { addr: 'http://localhost:26657' }\n) => {\n\tif (!wallet) throw MissingWalletError\n\tconst client = await SigningStargateClient.connectWithSigner(addr, wallet, {\n\t\tregistry\n\t})\n\tconst { address } = (await wallet.getAccounts())[0]\n\treturn {\n\t\tsignAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: '' }) =>\n\t\t\tclient.signAndBroadcast(address, msgs, fee, memo),\n\t\tmsgConnectionOpenTry: (data) => ({\n\t\t\ttypeUrl: '/ibc.core.connection.v1.MsgConnectionOpenTry',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgConnectionOpenConfirm: (data) => ({\n\t\t\ttypeUrl: '/ibc.core.connection.v1.MsgConnectionOpenConfirm',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgConnectionOpenInit: (data) => ({\n\t\t\ttypeUrl: '/ibc.core.connection.v1.MsgConnectionOpenInit',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgConnectionOpenAck: (data) => ({\n\t\t\ttypeUrl: '/ibc.core.connection.v1.MsgConnectionOpenAck',\n\t\t\tvalue: data\n\t\t})\n\t}\n}\nconst queryClient = async (\n\t{ addr: addr } = { addr: 'http://localhost:1317' }\n) => {\n\treturn new Api({ baseUrl: addr })\n}\nexport { txClient, queryClient }\n","import { txClient, queryClient, MissingWalletError } from './module'\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex'\nimport { ConnectionEnd } from './module/types/ibc/core/connection/v1/connection'\nimport { IdentifiedConnection } from './module/types/ibc/core/connection/v1/connection'\nimport { Counterparty } from './module/types/ibc/core/connection/v1/connection'\nimport { ClientPaths } from './module/types/ibc/core/connection/v1/connection'\nimport { ConnectionPaths } from './module/types/ibc/core/connection/v1/connection'\nimport { Version } from './module/types/ibc/core/connection/v1/connection'\nexport { ConnectionEnd, IdentifiedConnection, Counterparty, ClientPaths, ConnectionPaths, Version }\nasync function initTxClient(vuexGetters) {\n\treturn await txClient(vuexGetters['common/wallet/signer'], {\n\t\taddr: vuexGetters['common/env/apiTendermint']\n\t})\n}\nasync function initQueryClient(vuexGetters) {\n\treturn await queryClient({\n\t\taddr: vuexGetters['common/env/apiCosmos']\n\t})\n}\nfunction mergeResults(value, next_values) {\n\tfor (let prop of Object.keys(next_values)) {\n\t\tif (Array.isArray(next_values[prop])) {\n\t\t\tvalue[prop] = [...value[prop], ...next_values[prop]]\n\t\t} else {\n\t\t\tvalue[prop] = next_values[prop]\n\t\t}\n\t}\n\treturn value\n}\nfunction getStructure(template) {\n\tlet structure = { fields: [] }\n\tfor (const [key, value] of Object.entries(template)) {\n\t\tlet field = {}\n\t\tfield.name = key\n\t\tfield.type = typeof value\n\t\tstructure.fields.push(field)\n\t}\n\treturn structure\n}\nconst getDefaultState = () => {\n\treturn {\n\t\tConnection: {},\n\t\tConnections: {},\n\t\tClientConnections: {},\n\t\tConnectionClientState: {},\n\t\tConnectionConsensusState: {},\n\t\t_Structure: {\n\t\t\tConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n\t\t\tIdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n\t\t\tCounterparty: getStructure(Counterparty.fromPartial({})),\n\t\t\tClientPaths: getStructure(ClientPaths.fromPartial({})),\n\t\t\tConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n\t\t\tVersion: getStructure(Version.fromPartial({}))\n\t\t},\n\t\t_Subscriptions: new Set()\n\t}\n}\n// initial state\nconst state = getDefaultState()\nexport default {\n\tnamespaced: true,\n\tstate,\n\tmutations: {\n\t\tRESET_STATE(state) {\n\t\t\tObject.assign(state, getDefaultState())\n\t\t},\n\t\tQUERY(state, { query, key, value }) {\n\t\t\tstate[query][JSON.stringify(key)] = value\n\t\t},\n\t\tSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.add(subscription)\n\t\t},\n\t\tUNSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.delete(subscription)\n\t\t}\n\t},\n\tgetters: {\n\t\tgetConnection:\n\t\t\t(state) =>\n\t\t\t(params = { params: {} }) => {\n\t\t\t\tif (!params.query) {\n\t\t\t\t\tparams.query = null\n\t\t\t\t}\n\t\t\t\treturn state.Connection[JSON.stringify(params)] ?? {}\n\t\t\t},\n\t\tgetConnections:\n\t\t\t(state) =>\n\t\t\t(params = { params: {} }) => {\n\t\t\t\tif (!params.query) {\n\t\t\t\t\tparams.query = null\n\t\t\t\t}\n\t\t\t\treturn state.Connections[JSON.stringify(params)] ?? {}\n\t\t\t},\n\t\tgetClientConnections:\n\t\t\t(state) =>\n\t\t\t(params = { params: {} }) => {\n\t\t\t\tif (!params.query) {\n\t\t\t\t\tparams.query = null\n\t\t\t\t}\n\t\t\t\treturn state.ClientConnections[JSON.stringify(params)] ?? {}\n\t\t\t},\n\t\tgetConnectionClientState:\n\t\t\t(state) =>\n\t\t\t(params = { params: {} }) => {\n\t\t\t\tif (!params.query) {\n\t\t\t\t\tparams.query = null\n\t\t\t\t}\n\t\t\t\treturn state.ConnectionClientState[JSON.stringify(params)] ?? {}\n\t\t\t},\n\t\tgetConnectionConsensusState:\n\t\t\t(state) =>\n\t\t\t(params = { params: {} }) => {\n\t\t\t\tif (!params.query) {\n\t\t\t\t\tparams.query = null\n\t\t\t\t}\n\t\t\t\treturn state.ConnectionConsensusState[JSON.stringify(params)] ?? {}\n\t\t\t},\n\t\tgetTypeStructure: (state) => (type) => {\n\t\t\treturn state._Structure[type].fields\n\t\t}\n\t},\n\tactions: {\n\t\tinit({ dispatch, rootGetters }) {\n\t\t\tconsole.log('Vuex module: ibc.core.connection.v1 initialized!')\n\t\t\tif (rootGetters['common/env/client']) {\n\t\t\t\trootGetters['common/env/client'].on('newblock', () => {\n\t\t\t\t\tdispatch('StoreUpdate')\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tresetState({ commit }) {\n\t\t\tcommit('RESET_STATE')\n\t\t},\n\t\tunsubscribe({ commit }, subscription) {\n\t\t\tcommit('UNSUBSCRIBE', subscription)\n\t\t},\n\t\tasync StoreUpdate({ state, dispatch }) {\n\t\t\tstate._Subscriptions.forEach(async (subscription) => {\n\t\t\t\ttry {\n\t\t\t\t\tawait dispatch(subscription.action, subscription.payload)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new SpVuexError('Subscriptions: ' + e.message)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tasync QueryConnection(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{ options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryConnection(key.connection_id)).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Connection',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryConnection',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getConnection']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query: ' + e.message)\n\t\t\t}\n\t\t},\n\t\tasync QueryConnections(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{ options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryConnections(query)).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryConnections({\n\t\t\t\t\t\t\t...query,\n\t\t\t\t\t\t\t'pagination.key': value.pagination.nextKey\n\t\t\t\t\t\t})\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Connections',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryConnections',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getConnections']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query: ' + e.message)\n\t\t\t}\n\t\t},\n\t\tasync QueryClientConnections(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{ options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryClientConnections(key.client_id)).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'ClientConnections',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryClientConnections',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getClientConnections']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query: ' + e.message)\n\t\t\t}\n\t\t},\n\t\tasync QueryConnectionClientState(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{ options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryConnectionClientState(key.connection_id)).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'ConnectionClientState',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryConnectionClientState',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getConnectionClientState']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query: ' + e.message)\n\t\t\t}\n\t\t},\n\t\tasync QueryConnectionConsensusState(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{ options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'ConnectionConsensusState',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryConnectionConsensusState',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getConnectionConsensusState']({\n\t\t\t\t\t\tparams: { ...key },\n\t\t\t\t\t\tquery\n\t\t\t\t\t}) ?? {}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message)\n\t\t\t}\n\t\t},\n\n\t\tasync sendMsgConnectionOpenTry(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgConnectionOpenTry(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgConnectionOpenTry:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgConnectionOpenTry:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgConnectionOpenConfirm(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgConnectionOpenConfirm(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgConnectionOpenConfirm:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgConnectionOpenConfirm:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgConnectionOpenInit(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgConnectionOpenInit(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgConnectionOpenInit:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgConnectionOpenInit:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgConnectionOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgConnectionOpenAck(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.')\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx: ' + e.message)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgConnectionOpenTry({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgConnectionOpenTry(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgConnectionOpenTry:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgConnectionOpenTry:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgConnectionOpenConfirm(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgConnectionOpenConfirm:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgConnectionOpenConfirm:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgConnectionOpenInit({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgConnectionOpenInit(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgConnectionOpenInit:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgConnectionOpenInit:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgConnectionOpenAck({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgConnectionOpenAck(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.')\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message: ' + e.message)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Description, CommissionRates } from '../../../cosmos/staking/v1beta1/staking';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseMsgCreateValidator = {\n    minSelfDelegation: '',\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== '') {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgEditValidator = {\n    validatorAddress: '',\n    commissionRate: '',\n    minSelfDelegation: ''\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== '') {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgDelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    }\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'CreateValidator', data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'EditValidator', data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Delegate', data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'BeginRedelegate', data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Undelegate', data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from '@cosmjs/stargate'\nimport { Registry } from '@cosmjs/proto-signing'\nimport { Api } from './rest'\nimport { MsgUndelegate } from './types/cosmos/staking/v1beta1/tx'\nimport { MsgCreateValidator } from './types/cosmos/staking/v1beta1/tx'\nimport { MsgDelegate } from './types/cosmos/staking/v1beta1/tx'\nimport { MsgBeginRedelegate } from './types/cosmos/staking/v1beta1/tx'\nimport { MsgEditValidator } from './types/cosmos/staking/v1beta1/tx'\nconst types = [\n\t['/cosmos.staking.v1beta1.MsgUndelegate', MsgUndelegate],\n\t['/cosmos.staking.v1beta1.MsgCreateValidator', MsgCreateValidator],\n\t['/cosmos.staking.v1beta1.MsgDelegate', MsgDelegate],\n\t['/cosmos.staking.v1beta1.MsgBeginRedelegate', MsgBeginRedelegate],\n\t['/cosmos.staking.v1beta1.MsgEditValidator', MsgEditValidator]\n]\nexport const MissingWalletError = new Error('wallet is required')\nconst registry = new Registry(types)\nconst defaultFee = {\n\tamount: [],\n\tgas: '200000'\n}\nconst txClient = async (\n\twallet,\n\t{ addr: addr } = { addr: 'http://localhost:26657' }\n) => {\n\tif (!wallet) throw MissingWalletError\n\tconst client = await SigningStargateClient.connectWithSigner(addr, wallet, {\n\t\tregistry\n\t})\n\tconst { address } = (await wallet.getAccounts())[0]\n\treturn {\n\t\tsignAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: '' }) =>\n\t\t\tclient.signAndBroadcast(address, msgs, fee, memo),\n\t\tmsgUndelegate: (data) => ({\n\t\t\ttypeUrl: '/cosmos.staking.v1beta1.MsgUndelegate',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgCreateValidator: (data) => ({\n\t\t\ttypeUrl: '/cosmos.staking.v1beta1.MsgCreateValidator',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgDelegate: (data) => ({\n\t\t\ttypeUrl: '/cosmos.staking.v1beta1.MsgDelegate',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgBeginRedelegate: (data) => ({\n\t\t\ttypeUrl: '/cosmos.staking.v1beta1.MsgBeginRedelegate',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgEditValidator: (data) => ({\n\t\t\ttypeUrl: '/cosmos.staking.v1beta1.MsgEditValidator',\n\t\t\tvalue: data\n\t\t})\n\t}\n}\nconst queryClient = async (\n\t{ addr: addr } = { addr: 'http://localhost:1317' }\n) => {\n\treturn new Api({ baseUrl: addr })\n}\nexport { txClient, queryClient }\n","import { txClient, queryClient, MissingWalletError } from './module'\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex'\nimport { LastValidatorPower } from './module/types/cosmos/staking/v1beta1/genesis'\nimport { HistoricalInfo } from './module/types/cosmos/staking/v1beta1/staking'\nimport { CommissionRates } from './module/types/cosmos/staking/v1beta1/staking'\nimport { Commission } from './module/types/cosmos/staking/v1beta1/staking'\nimport { Description } from './module/types/cosmos/staking/v1beta1/staking'\nimport { Validator } from './module/types/cosmos/staking/v1beta1/staking'\nimport { ValAddresses } from './module/types/cosmos/staking/v1beta1/staking'\nimport { DVPair } from './module/types/cosmos/staking/v1beta1/staking'\nimport { DVPairs } from './module/types/cosmos/staking/v1beta1/staking'\nimport { DVVTriplet } from './module/types/cosmos/staking/v1beta1/staking'\nimport { DVVTriplets } from './module/types/cosmos/staking/v1beta1/staking'\nimport { Delegation } from './module/types/cosmos/staking/v1beta1/staking'\nimport { UnbondingDelegation } from './module/types/cosmos/staking/v1beta1/staking'\nimport { UnbondingDelegationEntry } from './module/types/cosmos/staking/v1beta1/staking'\nimport { RedelegationEntry } from './module/types/cosmos/staking/v1beta1/staking'\nimport { Redelegation } from './module/types/cosmos/staking/v1beta1/staking'\nimport { Params } from './module/types/cosmos/staking/v1beta1/staking'\nimport { DelegationResponse } from './module/types/cosmos/staking/v1beta1/staking'\nimport { RedelegationEntryResponse } from './module/types/cosmos/staking/v1beta1/staking'\nimport { RedelegationResponse } from './module/types/cosmos/staking/v1beta1/staking'\nimport { Pool } from './module/types/cosmos/staking/v1beta1/staking'\nexport {\n\tLastValidatorPower,\n\tHistoricalInfo,\n\tCommissionRates,\n\tCommission,\n\tDescription,\n\tValidator,\n\tValAddresses,\n\tDVPair,\n\tDVPairs,\n\tDVVTriplet,\n\tDVVTriplets,\n\tDelegation,\n\tUnbondingDelegation,\n\tUnbondingDelegationEntry,\n\tRedelegationEntry,\n\tRedelegation,\n\tParams,\n\tDelegationResponse,\n\tRedelegationEntryResponse,\n\tRedelegationResponse,\n\tPool\n}\nasync function initTxClient(vuexGetters) {\n\treturn await txClient(vuexGetters['common/wallet/signer'], {\n\t\taddr: vuexGetters['common/env/apiTendermint']\n\t})\n}\nasync function initQueryClient(vuexGetters) {\n\treturn await queryClient({\n\t\taddr: vuexGetters['common/env/apiCosmos']\n\t})\n}\nfunction mergeResults(value, next_values) {\n\tfor (let prop of Object.keys(next_values)) {\n\t\tif (Array.isArray(next_values[prop])) {\n\t\t\tvalue[prop] = [...value[prop], ...next_values[prop]]\n\t\t} else {\n\t\t\tvalue[prop] = next_values[prop]\n\t\t}\n\t}\n\treturn value\n}\nfunction getStructure(template) {\n\tlet structure = { fields: [] }\n\tfor (const [key, value] of Object.entries(template)) {\n\t\tlet field = {}\n\t\tfield.name = key\n\t\tfield.type = typeof value\n\t\tstructure.fields.push(field)\n\t}\n\treturn structure\n}\nconst getDefaultState = () => {\n\treturn {\n\t\tValidators: {},\n\t\tValidator: {},\n\t\tValidatorDelegations: {},\n\t\tValidatorUnbondingDelegations: {},\n\t\tDelegation: {},\n\t\tUnbondingDelegation: {},\n\t\tDelegatorDelegations: {},\n\t\tDelegatorUnbondingDelegations: {},\n\t\tRedelegations: {},\n\t\tDelegatorValidators: {},\n\t\tDelegatorValidator: {},\n\t\tHistoricalInfo: {},\n\t\tPool: {},\n\t\tParams: {},\n\t\t_Structure: {\n\t\t\tLastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n\t\t\tHistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n\t\t\tCommissionRates: getStructure(CommissionRates.fromPartial({})),\n\t\t\tCommission: getStructure(Commission.fromPartial({})),\n\t\t\tDescription: getStructure(Description.fromPartial({})),\n\t\t\tValidator: getStructure(Validator.fromPartial({})),\n\t\t\tValAddresses: getStructure(ValAddresses.fromPartial({})),\n\t\t\tDVPair: getStructure(DVPair.fromPartial({})),\n\t\t\tDVPairs: getStructure(DVPairs.fromPartial({})),\n\t\t\tDVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n\t\t\tDVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n\t\t\tDelegation: getStructure(Delegation.fromPartial({})),\n\t\t\tUnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n\t\t\tUnbondingDelegationEntry: getStructure(\n\t\t\t\tUnbondingDelegationEntry.fromPartial({})\n\t\t\t),\n\t\t\tRedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n\t\t\tRedelegation: getStructure(Redelegation.fromPartial({})),\n\t\t\tParams: getStructure(Params.fromPartial({})),\n\t\t\tDelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n\t\t\tRedelegationEntryResponse: getStructure(\n\t\t\t\tRedelegationEntryResponse.fromPartial({})\n\t\t\t),\n\t\t\tRedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n\t\t\tPool: getStructure(Pool.fromPartial({}))\n\t\t},\n\t\t_Subscriptions: new Set()\n\t}\n}\n// initial state\nconst state = getDefaultState()\nexport default {\n\tnamespaced: true,\n\tstate,\n\tmutations: {\n\t\tRESET_STATE(state) {\n\t\t\tObject.assign(state, getDefaultState())\n\t\t},\n\t\tQUERY(state, { query, key, value }) {\n\t\t\tstate[query][JSON.stringify(key)] = value\n\t\t},\n\t\tSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.add(subscription)\n\t\t},\n\t\tUNSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.delete(subscription)\n\t\t}\n\t},\n\tgetters: {\n\t\tgetValidators: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Validators[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetValidator: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Validator[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetValidatorDelegations: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.ValidatorDelegations[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetValidatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetDelegation: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Delegation[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetUnbondingDelegation: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.UnbondingDelegation[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetDelegatorDelegations: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.DelegatorDelegations[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetDelegatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetRedelegations: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Redelegations[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetDelegatorValidators: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.DelegatorValidators[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetDelegatorValidator: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.DelegatorValidator[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetHistoricalInfo: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.HistoricalInfo[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetPool: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Pool[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetParams: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Params[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetTypeStructure: (state) => (type) => {\n\t\t\treturn state._Structure[type].fields\n\t\t}\n\t},\n\tactions: {\n\t\tinit({ dispatch, rootGetters }) {\n\t\t\tconsole.log('Vuex module: cosmos.staking.v1beta1 initialized!')\n\t\t\tif (rootGetters['common/env/client']) {\n\t\t\t\trootGetters['common/env/client'].on('newblock', () => {\n\t\t\t\t\tdispatch('StoreUpdate')\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tresetState({ commit }) {\n\t\t\tcommit('RESET_STATE')\n\t\t},\n\t\tunsubscribe({ commit }, subscription) {\n\t\t\tcommit('UNSUBSCRIBE', subscription)\n\t\t},\n\t\tasync StoreUpdate({ state, dispatch }) {\n\t\t\tstate._Subscriptions.forEach(async (subscription) => {\n\t\t\t\ttry {\n\t\t\t\t\tawait dispatch(subscription.action, subscription.payload)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new SpVuexError('Subscriptions: ' + e.message)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tasync QueryValidators(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryValidators(query)).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryValidators({\n\t\t\t\t\t\t\t...query,\n\t\t\t\t\t\t\t'pagination.key': value.pagination.nextKey\n\t\t\t\t\t\t})\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Validators',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryValidators',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getValidators']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryValidators',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryValidator(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryValidator(key.validator_addr)).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Validator',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryValidator',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getValidator']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryValidator',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryValidatorDelegations(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryValidatorDelegations(key.validator_addr, query)\n\t\t\t\t).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryValidatorDelegations(key.validator_addr, {\n\t\t\t\t\t\t\t...query,\n\t\t\t\t\t\t\t'pagination.key': value.pagination.nextKey\n\t\t\t\t\t\t})\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'ValidatorDelegations',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryValidatorDelegations',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getValidatorDelegations']({ params: { ...key }, query }) ??\n\t\t\t\t\t{}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryValidatorDelegations',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryValidatorUnbondingDelegations(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryValidatorUnbondingDelegations(\n\t\t\t\t\t\tkey.validator_addr,\n\t\t\t\t\t\tquery\n\t\t\t\t\t)\n\t\t\t\t).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryValidatorUnbondingDelegations(\n\t\t\t\t\t\t\tkey.validator_addr,\n\t\t\t\t\t\t\t{ ...query, 'pagination.key': value.pagination.nextKey }\n\t\t\t\t\t\t)\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'ValidatorUnbondingDelegations',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryValidatorUnbondingDelegations',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getValidatorUnbondingDelegations']({\n\t\t\t\t\t\tparams: { ...key },\n\t\t\t\t\t\tquery\n\t\t\t\t\t}) ?? {}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryValidatorUnbondingDelegations',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryDelegation(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryDelegation(\n\t\t\t\t\t\tkey.validator_addr,\n\t\t\t\t\t\tkey.delegator_addr\n\t\t\t\t\t)\n\t\t\t\t).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Delegation',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryDelegation',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getDelegation']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryDelegation',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryUnbondingDelegation(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryUnbondingDelegation(\n\t\t\t\t\t\tkey.validator_addr,\n\t\t\t\t\t\tkey.delegator_addr\n\t\t\t\t\t)\n\t\t\t\t).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'UnbondingDelegation',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryUnbondingDelegation',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryUnbondingDelegation',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryDelegatorDelegations(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryDelegatorDelegations(key.delegator_addr, query)\n\t\t\t\t).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryDelegatorDelegations(key.delegator_addr, {\n\t\t\t\t\t\t\t...query,\n\t\t\t\t\t\t\t'pagination.key': value.pagination.nextKey\n\t\t\t\t\t\t})\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'DelegatorDelegations',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryDelegatorDelegations',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getDelegatorDelegations']({ params: { ...key }, query }) ??\n\t\t\t\t\t{}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryDelegatorDelegations',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryDelegatorUnbondingDelegations(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryDelegatorUnbondingDelegations(\n\t\t\t\t\t\tkey.delegator_addr,\n\t\t\t\t\t\tquery\n\t\t\t\t\t)\n\t\t\t\t).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryDelegatorUnbondingDelegations(\n\t\t\t\t\t\t\tkey.delegator_addr,\n\t\t\t\t\t\t\t{ ...query, 'pagination.key': value.pagination.nextKey }\n\t\t\t\t\t\t)\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'DelegatorUnbondingDelegations',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryDelegatorUnbondingDelegations',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getDelegatorUnbondingDelegations']({\n\t\t\t\t\t\tparams: { ...key },\n\t\t\t\t\t\tquery\n\t\t\t\t\t}) ?? {}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryDelegatorUnbondingDelegations',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryRedelegations(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryRedelegations(key.delegator_addr, query)\n\t\t\t\t).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryRedelegations(key.delegator_addr, {\n\t\t\t\t\t\t\t...query,\n\t\t\t\t\t\t\t'pagination.key': value.pagination.nextKey\n\t\t\t\t\t\t})\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Redelegations',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryRedelegations',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getRedelegations']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryRedelegations',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryDelegatorValidators(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryDelegatorValidators(key.delegator_addr, query)\n\t\t\t\t).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryDelegatorValidators(key.delegator_addr, {\n\t\t\t\t\t\t\t...query,\n\t\t\t\t\t\t\t'pagination.key': value.pagination.nextKey\n\t\t\t\t\t\t})\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'DelegatorValidators',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryDelegatorValidators',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getDelegatorValidators']({ params: { ...key }, query }) ?? {}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryDelegatorValidators',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryDelegatorValidator(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryDelegatorValidator(\n\t\t\t\t\t\tkey.delegator_addr,\n\t\t\t\t\t\tkey.validator_addr\n\t\t\t\t\t)\n\t\t\t\t).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'DelegatorValidator',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryDelegatorValidator',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getDelegatorValidator']({ params: { ...key }, query }) ?? {}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryDelegatorValidator',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryHistoricalInfo(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryHistoricalInfo(key.height)).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'HistoricalInfo',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryHistoricalInfo',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryHistoricalInfo',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryPool(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryPool()).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Pool',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryPool',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getPool']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryPool',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryParams(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryParams()).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Params',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryParams',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getParams']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryParams',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync sendMsgUndelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgUndelegate(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgUndelegate:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgUndelegate:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgCreateValidator(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgCreateValidator(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgCreateValidator:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgCreateValidator:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgDelegate(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgDelegate:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgDelegate:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgBeginRedelegate(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgBeginRedelegate(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgBeginRedelegate:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgBeginRedelegate:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgEditValidator(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgEditValidator(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgEditValidator:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgEditValidator:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgUndelegate({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgUndelegate(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgUndelegate:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgUndelegate:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgCreateValidator({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgCreateValidator(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgCreateValidator:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgCreateValidator:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgDelegate({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgDelegate(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgDelegate:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgDelegate:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgBeginRedelegate({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgBeginRedelegate(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgBeginRedelegate:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgBeginRedelegate:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgEditValidator({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgEditValidator(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgEditValidator:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgEditValidator:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from '@cosmjs/stargate'\nimport { Registry } from '@cosmjs/proto-signing'\nimport { Api } from './rest'\nimport { MsgUpdateClient } from './types/ibc/core/client/v1/tx'\nimport { MsgSubmitMisbehaviour } from './types/ibc/core/client/v1/tx'\nimport { MsgCreateClient } from './types/ibc/core/client/v1/tx'\nimport { MsgUpgradeClient } from './types/ibc/core/client/v1/tx'\nconst types = [\n\t['/ibc.core.client.v1.MsgUpdateClient', MsgUpdateClient],\n\t['/ibc.core.client.v1.MsgSubmitMisbehaviour', MsgSubmitMisbehaviour],\n\t['/ibc.core.client.v1.MsgCreateClient', MsgCreateClient],\n\t['/ibc.core.client.v1.MsgUpgradeClient', MsgUpgradeClient]\n]\nexport const MissingWalletError = new Error('wallet is required')\nconst registry = new Registry(types)\nconst defaultFee = {\n\tamount: [],\n\tgas: '200000'\n}\nconst txClient = async (\n\twallet,\n\t{ addr: addr } = { addr: 'http://localhost:26657' }\n) => {\n\tif (!wallet) throw MissingWalletError\n\tconst client = await SigningStargateClient.connectWithSigner(addr, wallet, {\n\t\tregistry\n\t})\n\tconst { address } = (await wallet.getAccounts())[0]\n\treturn {\n\t\tsignAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: '' }) =>\n\t\t\tclient.signAndBroadcast(address, msgs, fee, memo),\n\t\tmsgUpdateClient: (data) => ({\n\t\t\ttypeUrl: '/ibc.core.client.v1.MsgUpdateClient',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgSubmitMisbehaviour: (data) => ({\n\t\t\ttypeUrl: '/ibc.core.client.v1.MsgSubmitMisbehaviour',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgCreateClient: (data) => ({\n\t\t\ttypeUrl: '/ibc.core.client.v1.MsgCreateClient',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgUpgradeClient: (data) => ({\n\t\t\ttypeUrl: '/ibc.core.client.v1.MsgUpgradeClient',\n\t\t\tvalue: data\n\t\t})\n\t}\n}\nconst queryClient = async (\n\t{ addr: addr } = { addr: 'http://localhost:1317' }\n) => {\n\treturn new Api({ baseUrl: addr })\n}\nexport { txClient, queryClient }\n","import { txClient, queryClient, MissingWalletError } from './module'\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex'\nimport { IdentifiedClientState } from './module/types/ibc/core/client/v1/client'\nimport { ConsensusStateWithHeight } from './module/types/ibc/core/client/v1/client'\nimport { ClientConsensusStates } from './module/types/ibc/core/client/v1/client'\nimport { ClientUpdateProposal } from './module/types/ibc/core/client/v1/client'\nimport { Height } from './module/types/ibc/core/client/v1/client'\nimport { Params } from './module/types/ibc/core/client/v1/client'\nimport { GenesisMetadata } from './module/types/ibc/core/client/v1/genesis'\nimport { IdentifiedGenesisMetadata } from './module/types/ibc/core/client/v1/genesis'\nexport {\n\tIdentifiedClientState,\n\tConsensusStateWithHeight,\n\tClientConsensusStates,\n\tClientUpdateProposal,\n\tHeight,\n\tParams,\n\tGenesisMetadata,\n\tIdentifiedGenesisMetadata\n}\nasync function initTxClient(vuexGetters) {\n\treturn await txClient(vuexGetters['common/wallet/signer'], {\n\t\taddr: vuexGetters['common/env/apiTendermint']\n\t})\n}\nasync function initQueryClient(vuexGetters) {\n\treturn await queryClient({\n\t\taddr: vuexGetters['common/env/apiCosmos']\n\t})\n}\nfunction mergeResults(value, next_values) {\n\tfor (let prop of Object.keys(next_values)) {\n\t\tif (Array.isArray(next_values[prop])) {\n\t\t\tvalue[prop] = [...value[prop], ...next_values[prop]]\n\t\t} else {\n\t\t\tvalue[prop] = next_values[prop]\n\t\t}\n\t}\n\treturn value\n}\nfunction getStructure(template) {\n\tlet structure = { fields: [] }\n\tfor (const [key, value] of Object.entries(template)) {\n\t\tlet field = {}\n\t\tfield.name = key\n\t\tfield.type = typeof value\n\t\tstructure.fields.push(field)\n\t}\n\treturn structure\n}\nconst getDefaultState = () => {\n\treturn {\n\t\tClientState: {},\n\t\tClientStates: {},\n\t\tConsensusState: {},\n\t\tConsensusStates: {},\n\t\tClientParams: {},\n\t\t_Structure: {\n\t\t\tIdentifiedClientState: getStructure(\n\t\t\t\tIdentifiedClientState.fromPartial({})\n\t\t\t),\n\t\t\tConsensusStateWithHeight: getStructure(\n\t\t\t\tConsensusStateWithHeight.fromPartial({})\n\t\t\t),\n\t\t\tClientConsensusStates: getStructure(\n\t\t\t\tClientConsensusStates.fromPartial({})\n\t\t\t),\n\t\t\tClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n\t\t\tHeight: getStructure(Height.fromPartial({})),\n\t\t\tParams: getStructure(Params.fromPartial({})),\n\t\t\tGenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n\t\t\tIdentifiedGenesisMetadata: getStructure(\n\t\t\t\tIdentifiedGenesisMetadata.fromPartial({})\n\t\t\t)\n\t\t},\n\t\t_Subscriptions: new Set()\n\t}\n}\n// initial state\nconst state = getDefaultState()\nexport default {\n\tnamespaced: true,\n\tstate,\n\tmutations: {\n\t\tRESET_STATE(state) {\n\t\t\tObject.assign(state, getDefaultState())\n\t\t},\n\t\tQUERY(state, { query, key, value }) {\n\t\t\tstate[query][JSON.stringify(key)] = value\n\t\t},\n\t\tSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.add(subscription)\n\t\t},\n\t\tUNSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.delete(subscription)\n\t\t}\n\t},\n\tgetters: {\n\t\tgetClientState: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.ClientState[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetClientStates: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.ClientStates[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetConsensusState: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.ConsensusState[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetConsensusStates: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.ConsensusStates[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetClientParams: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.ClientParams[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetTypeStructure: (state) => (type) => {\n\t\t\treturn state._Structure[type].fields\n\t\t}\n\t},\n\tactions: {\n\t\tinit({ dispatch, rootGetters }) {\n\t\t\tconsole.log('Vuex module: ibc.core.client.v1 initialized!')\n\t\t\tif (rootGetters['common/env/client']) {\n\t\t\t\trootGetters['common/env/client'].on('newblock', () => {\n\t\t\t\t\tdispatch('StoreUpdate')\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tresetState({ commit }) {\n\t\t\tcommit('RESET_STATE')\n\t\t},\n\t\tunsubscribe({ commit }, subscription) {\n\t\t\tcommit('UNSUBSCRIBE', subscription)\n\t\t},\n\t\tasync StoreUpdate({ state, dispatch }) {\n\t\t\tstate._Subscriptions.forEach(async (subscription) => {\n\t\t\t\ttry {\n\t\t\t\t\tawait dispatch(subscription.action, subscription.payload)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new SpVuexError('Subscriptions: ' + e.message)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tasync QueryClientState(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryClientState(key.client_id)).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'ClientState',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryClientState',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getClientState']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryClientState',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryClientStates(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryClientStates(query)).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryClientStates({\n\t\t\t\t\t\t\t...query,\n\t\t\t\t\t\t\t'pagination.key': value.pagination.nextKey\n\t\t\t\t\t\t})\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'ClientStates',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryClientStates',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getClientStates']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryClientStates',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryConsensusState(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryConsensusState(\n\t\t\t\t\t\tkey.client_id,\n\t\t\t\t\t\tkey.revision_number,\n\t\t\t\t\t\tkey.revision_height,\n\t\t\t\t\t\tquery\n\t\t\t\t\t)\n\t\t\t\t).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryConsensusState(\n\t\t\t\t\t\t\tkey.client_id,\n\t\t\t\t\t\t\tkey.revision_number,\n\t\t\t\t\t\t\tkey.revision_height,\n\t\t\t\t\t\t\t{ ...query, 'pagination.key': value.pagination.nextKey }\n\t\t\t\t\t\t)\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'ConsensusState',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryConsensusState',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getConsensusState']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryConsensusState',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryConsensusStates(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryConsensusStates(key.client_id, query)\n\t\t\t\t).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryConsensusStates(key.client_id, {\n\t\t\t\t\t\t\t...query,\n\t\t\t\t\t\t\t'pagination.key': value.pagination.nextKey\n\t\t\t\t\t\t})\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'ConsensusStates',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryConsensusStates',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tgetters['getConsensusStates']({ params: { ...key }, query }) ?? {}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryConsensusStates',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryClientParams(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryClientParams()).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'ClientParams',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryClientParams',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getClientParams']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryClientParams',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync sendMsgUpdateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgUpdateClient(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgUpdateClient:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgUpdateClient:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgSubmitMisbehaviour(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgSubmitMisbehaviour(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgSubmitMisbehaviour:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgSubmitMisbehaviour:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgCreateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgCreateClient(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgCreateClient:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgCreateClient:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgUpgradeClient(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgUpgradeClient(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgUpgradeClient:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgUpgradeClient:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgUpdateClient({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgUpdateClient(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgUpdateClient:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgUpdateClient:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgSubmitMisbehaviour(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgSubmitMisbehaviour:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgSubmitMisbehaviour:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgCreateClient({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgCreateClient(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgCreateClient:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgCreateClient:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgUpgradeClient({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgUpgradeClient(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgUpgradeClient:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgUpgradeClient:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from '@cosmjs/stargate'\nimport { Registry } from '@cosmjs/proto-signing'\nimport { Api } from './rest'\nconst types = []\nexport const MissingWalletError = new Error('wallet is required')\nconst registry = new Registry(types)\nconst defaultFee = {\n\tamount: [],\n\tgas: '200000'\n}\nconst txClient = async (\n\twallet,\n\t{ addr: addr } = { addr: 'http://localhost:26657' }\n) => {\n\tif (!wallet) throw MissingWalletError\n\tconst client = await SigningStargateClient.connectWithSigner(addr, wallet, {\n\t\tregistry\n\t})\n\tconst { address } = (await wallet.getAccounts())[0]\n\treturn {\n\t\tsignAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: '' }) =>\n\t\t\tclient.signAndBroadcast(address, msgs, fee, memo)\n\t}\n}\nconst queryClient = async (\n\t{ addr: addr } = { addr: 'http://localhost:1317' }\n) => {\n\treturn new Api({ baseUrl: addr })\n}\nexport { txClient, queryClient }\n","import { txClient, queryClient } from './module'\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex'\nimport { TxResponse } from './module/types/cosmos/base/abci/v1beta1/abci'\nimport { ABCIMessageLog } from './module/types/cosmos/base/abci/v1beta1/abci'\nimport { StringEvent } from './module/types/cosmos/base/abci/v1beta1/abci'\nimport { Attribute } from './module/types/cosmos/base/abci/v1beta1/abci'\nimport { GasInfo } from './module/types/cosmos/base/abci/v1beta1/abci'\nimport { Result } from './module/types/cosmos/base/abci/v1beta1/abci'\nimport { SimulationResponse } from './module/types/cosmos/base/abci/v1beta1/abci'\nimport { MsgData } from './module/types/cosmos/base/abci/v1beta1/abci'\nimport { TxMsgData } from './module/types/cosmos/base/abci/v1beta1/abci'\nimport { SearchTxsResult } from './module/types/cosmos/base/abci/v1beta1/abci'\nexport {\n\tTxResponse,\n\tABCIMessageLog,\n\tStringEvent,\n\tAttribute,\n\tGasInfo,\n\tResult,\n\tSimulationResponse,\n\tMsgData,\n\tTxMsgData,\n\tSearchTxsResult\n}\nasync function initTxClient(vuexGetters) {\n\treturn await txClient(vuexGetters['common/wallet/signer'], {\n\t\taddr: vuexGetters['common/env/apiTendermint']\n\t})\n}\nasync function initQueryClient(vuexGetters) {\n\treturn await queryClient({\n\t\taddr: vuexGetters['common/env/apiCosmos']\n\t})\n}\nfunction mergeResults(value, next_values) {\n\tfor (let prop of Object.keys(next_values)) {\n\t\tif (Array.isArray(next_values[prop])) {\n\t\t\tvalue[prop] = [...value[prop], ...next_values[prop]]\n\t\t} else {\n\t\t\tvalue[prop] = next_values[prop]\n\t\t}\n\t}\n\treturn value\n}\nfunction getStructure(template) {\n\tlet structure = { fields: [] }\n\tfor (const [key, value] of Object.entries(template)) {\n\t\tlet field = {}\n\t\tfield.name = key\n\t\tfield.type = typeof value\n\t\tstructure.fields.push(field)\n\t}\n\treturn structure\n}\nconst getDefaultState = () => {\n\treturn {\n\t\t_Structure: {\n\t\t\tTxResponse: getStructure(TxResponse.fromPartial({})),\n\t\t\tABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n\t\t\tStringEvent: getStructure(StringEvent.fromPartial({})),\n\t\t\tAttribute: getStructure(Attribute.fromPartial({})),\n\t\t\tGasInfo: getStructure(GasInfo.fromPartial({})),\n\t\t\tResult: getStructure(Result.fromPartial({})),\n\t\t\tSimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n\t\t\tMsgData: getStructure(MsgData.fromPartial({})),\n\t\t\tTxMsgData: getStructure(TxMsgData.fromPartial({})),\n\t\t\tSearchTxsResult: getStructure(SearchTxsResult.fromPartial({}))\n\t\t},\n\t\t_Subscriptions: new Set()\n\t}\n}\n// initial state\nconst state = getDefaultState()\nexport default {\n\tnamespaced: true,\n\tstate,\n\tmutations: {\n\t\tRESET_STATE(state) {\n\t\t\tObject.assign(state, getDefaultState())\n\t\t},\n\t\tQUERY(state, { query, key, value }) {\n\t\t\tstate[query][JSON.stringify(key)] = value\n\t\t},\n\t\tSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.add(subscription)\n\t\t},\n\t\tUNSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.delete(subscription)\n\t\t}\n\t},\n\tgetters: {\n\t\tgetTypeStructure: (state) => (type) => {\n\t\t\treturn state._Structure[type].fields\n\t\t}\n\t},\n\tactions: {\n\t\tinit({ dispatch, rootGetters }) {\n\t\t\tconsole.log('Vuex module: cosmos.base.abci.v1beta1 initialized!')\n\t\t\tif (rootGetters['common/env/client']) {\n\t\t\t\trootGetters['common/env/client'].on('newblock', () => {\n\t\t\t\t\tdispatch('StoreUpdate')\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tresetState({ commit }) {\n\t\t\tcommit('RESET_STATE')\n\t\t},\n\t\tunsubscribe({ commit }, subscription) {\n\t\t\tcommit('UNSUBSCRIBE', subscription)\n\t\t},\n\t\tasync StoreUpdate({ state, dispatch }) {\n\t\t\tstate._Subscriptions.forEach(async (subscription) => {\n\t\t\t\ttry {\n\t\t\t\t\tawait dispatch(subscription.action, subscription.payload)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new SpVuexError('Subscriptions: ' + e.message)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n}\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from '@cosmjs/stargate'\nimport { Registry } from '@cosmjs/proto-signing'\nimport { Api } from './rest'\nconst types = []\nexport const MissingWalletError = new Error('wallet is required')\nconst registry = new Registry(types)\nconst defaultFee = {\n\tamount: [],\n\tgas: '200000'\n}\nconst txClient = async (\n\twallet,\n\t{ addr: addr } = { addr: 'http://localhost:26657' }\n) => {\n\tif (!wallet) throw MissingWalletError\n\tconst client = await SigningStargateClient.connectWithSigner(addr, wallet, {\n\t\tregistry\n\t})\n\tconst { address } = (await wallet.getAccounts())[0]\n\treturn {\n\t\tsignAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: '' }) =>\n\t\t\tclient.signAndBroadcast(address, msgs, fee, memo)\n\t}\n}\nconst queryClient = async (\n\t{ addr: addr } = { addr: 'http://localhost:1317' }\n) => {\n\treturn new Api({ baseUrl: addr })\n}\nexport { txClient, queryClient }\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient } from './module'\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex'\nimport { Coin } from './module/types/cosmos/base/v1beta1/coin'\nimport { DecCoin } from './module/types/cosmos/base/v1beta1/coin'\nimport { IntProto } from './module/types/cosmos/base/v1beta1/coin'\nimport { DecProto } from './module/types/cosmos/base/v1beta1/coin'\nexport { Coin, DecCoin, IntProto, DecProto }\nasync function initTxClient(vuexGetters) {\n\treturn await txClient(vuexGetters['common/wallet/signer'], {\n\t\taddr: vuexGetters['common/env/apiTendermint']\n\t})\n}\nasync function initQueryClient(vuexGetters) {\n\treturn await queryClient({\n\t\taddr: vuexGetters['common/env/apiCosmos']\n\t})\n}\nfunction mergeResults(value, next_values) {\n\tfor (let prop of Object.keys(next_values)) {\n\t\tif (Array.isArray(next_values[prop])) {\n\t\t\tvalue[prop] = [...value[prop], ...next_values[prop]]\n\t\t} else {\n\t\t\tvalue[prop] = next_values[prop]\n\t\t}\n\t}\n\treturn value\n}\nfunction getStructure(template) {\n\tlet structure = { fields: [] }\n\tfor (const [key, value] of Object.entries(template)) {\n\t\tlet field = {}\n\t\tfield.name = key\n\t\tfield.type = typeof value\n\t\tstructure.fields.push(field)\n\t}\n\treturn structure\n}\nconst getDefaultState = () => {\n\treturn {\n\t\t_Structure: {\n\t\t\tCoin: getStructure(Coin.fromPartial({})),\n\t\t\tDecCoin: getStructure(DecCoin.fromPartial({})),\n\t\t\tIntProto: getStructure(IntProto.fromPartial({})),\n\t\t\tDecProto: getStructure(DecProto.fromPartial({}))\n\t\t},\n\t\t_Subscriptions: new Set()\n\t}\n}\n// initial state\nconst state = getDefaultState()\nexport default {\n\tnamespaced: true,\n\tstate,\n\tmutations: {\n\t\tRESET_STATE(state) {\n\t\t\tObject.assign(state, getDefaultState())\n\t\t},\n\t\tQUERY(state, { query, key, value }) {\n\t\t\tstate[query][JSON.stringify(key)] = value\n\t\t},\n\t\tSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.add(subscription)\n\t\t},\n\t\tUNSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.delete(subscription)\n\t\t}\n\t},\n\tgetters: {\n\t\tgetTypeStructure: (state) => (type) => {\n\t\t\treturn state._Structure[type].fields\n\t\t}\n\t},\n\tactions: {\n\t\tinit({ dispatch, rootGetters }) {\n\t\t\tconsole.log('Vuex module: cosmos.base.v1beta1 initialized!')\n\t\t\tif (rootGetters['common/env/client']) {\n\t\t\t\trootGetters['common/env/client'].on('newblock', () => {\n\t\t\t\t\tdispatch('StoreUpdate')\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tresetState({ commit }) {\n\t\t\tcommit('RESET_STATE')\n\t\t},\n\t\tunsubscribe({ commit }, subscription) {\n\t\t\tcommit('UNSUBSCRIBE', subscription)\n\t\t},\n\t\tasync StoreUpdate({ state, dispatch }) {\n\t\t\tstate._Subscriptions.forEach(async (subscription) => {\n\t\t\t\ttry {\n\t\t\t\t\tawait dispatch(subscription.action, subscription.payload)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new SpVuexError('Subscriptions: ' + e.message)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n}\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from '@cosmjs/stargate'\nimport { Registry } from '@cosmjs/proto-signing'\nimport { Api } from './rest'\nimport { MsgVote } from './types/cosmos/gov/v1beta1/tx'\nimport { MsgDeposit } from './types/cosmos/gov/v1beta1/tx'\nimport { MsgSubmitProposal } from './types/cosmos/gov/v1beta1/tx'\nconst types = [\n\t['/cosmos.gov.v1beta1.MsgVote', MsgVote],\n\t['/cosmos.gov.v1beta1.MsgDeposit', MsgDeposit],\n\t['/cosmos.gov.v1beta1.MsgSubmitProposal', MsgSubmitProposal]\n]\nexport const MissingWalletError = new Error('wallet is required')\nconst registry = new Registry(types)\nconst defaultFee = {\n\tamount: [],\n\tgas: '200000'\n}\nconst txClient = async (\n\twallet,\n\t{ addr: addr } = { addr: 'http://localhost:26657' }\n) => {\n\tif (!wallet) throw MissingWalletError\n\tconst client = await SigningStargateClient.connectWithSigner(addr, wallet, {\n\t\tregistry\n\t})\n\tconst { address } = (await wallet.getAccounts())[0]\n\treturn {\n\t\tsignAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: '' }) =>\n\t\t\tclient.signAndBroadcast(address, msgs, fee, memo),\n\t\tmsgVote: (data) => ({\n\t\t\ttypeUrl: '/cosmos.gov.v1beta1.MsgVote',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgDeposit: (data) => ({\n\t\t\ttypeUrl: '/cosmos.gov.v1beta1.MsgDeposit',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgSubmitProposal: (data) => ({\n\t\t\ttypeUrl: '/cosmos.gov.v1beta1.MsgSubmitProposal',\n\t\t\tvalue: data\n\t\t})\n\t}\n}\nconst queryClient = async (\n\t{ addr: addr } = { addr: 'http://localhost:1317' }\n) => {\n\treturn new Api({ baseUrl: addr })\n}\nexport { txClient, queryClient }\n","import { txClient, queryClient, MissingWalletError } from './module'\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex'\nimport { TextProposal } from './module/types/cosmos/gov/v1beta1/gov'\nimport { Deposit } from './module/types/cosmos/gov/v1beta1/gov'\nimport { Proposal } from './module/types/cosmos/gov/v1beta1/gov'\nimport { TallyResult } from './module/types/cosmos/gov/v1beta1/gov'\nimport { Vote } from './module/types/cosmos/gov/v1beta1/gov'\nimport { DepositParams } from './module/types/cosmos/gov/v1beta1/gov'\nimport { VotingParams } from './module/types/cosmos/gov/v1beta1/gov'\nimport { TallyParams } from './module/types/cosmos/gov/v1beta1/gov'\nexport {\n\tTextProposal,\n\tDeposit,\n\tProposal,\n\tTallyResult,\n\tVote,\n\tDepositParams,\n\tVotingParams,\n\tTallyParams\n}\nasync function initTxClient(vuexGetters) {\n\treturn await txClient(vuexGetters['common/wallet/signer'], {\n\t\taddr: vuexGetters['common/env/apiTendermint']\n\t})\n}\nasync function initQueryClient(vuexGetters) {\n\treturn await queryClient({\n\t\taddr: vuexGetters['common/env/apiCosmos']\n\t})\n}\nfunction mergeResults(value, next_values) {\n\tfor (let prop of Object.keys(next_values)) {\n\t\tif (Array.isArray(next_values[prop])) {\n\t\t\tvalue[prop] = [...value[prop], ...next_values[prop]]\n\t\t} else {\n\t\t\tvalue[prop] = next_values[prop]\n\t\t}\n\t}\n\treturn value\n}\nfunction getStructure(template) {\n\tlet structure = { fields: [] }\n\tfor (const [key, value] of Object.entries(template)) {\n\t\tlet field = {}\n\t\tfield.name = key\n\t\tfield.type = typeof value\n\t\tstructure.fields.push(field)\n\t}\n\treturn structure\n}\nconst getDefaultState = () => {\n\treturn {\n\t\tProposal: {},\n\t\tProposals: {},\n\t\tVote: {},\n\t\tVotes: {},\n\t\tParams: {},\n\t\tDeposit: {},\n\t\tDeposits: {},\n\t\tTallyResult: {},\n\t\t_Structure: {\n\t\t\tTextProposal: getStructure(TextProposal.fromPartial({})),\n\t\t\tDeposit: getStructure(Deposit.fromPartial({})),\n\t\t\tProposal: getStructure(Proposal.fromPartial({})),\n\t\t\tTallyResult: getStructure(TallyResult.fromPartial({})),\n\t\t\tVote: getStructure(Vote.fromPartial({})),\n\t\t\tDepositParams: getStructure(DepositParams.fromPartial({})),\n\t\t\tVotingParams: getStructure(VotingParams.fromPartial({})),\n\t\t\tTallyParams: getStructure(TallyParams.fromPartial({}))\n\t\t},\n\t\t_Subscriptions: new Set()\n\t}\n}\n// initial state\nconst state = getDefaultState()\nexport default {\n\tnamespaced: true,\n\tstate,\n\tmutations: {\n\t\tRESET_STATE(state) {\n\t\t\tObject.assign(state, getDefaultState())\n\t\t},\n\t\tQUERY(state, { query, key, value }) {\n\t\t\tstate[query][JSON.stringify(key)] = value\n\t\t},\n\t\tSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.add(subscription)\n\t\t},\n\t\tUNSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.delete(subscription)\n\t\t}\n\t},\n\tgetters: {\n\t\tgetProposal: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Proposal[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetProposals: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Proposals[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetVote: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Vote[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetVotes: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Votes[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetParams: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Params[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetDeposit: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Deposit[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetDeposits: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Deposits[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetTallyResult: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.TallyResult[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetTypeStructure: (state) => (type) => {\n\t\t\treturn state._Structure[type].fields\n\t\t}\n\t},\n\tactions: {\n\t\tinit({ dispatch, rootGetters }) {\n\t\t\tconsole.log('Vuex module: cosmos.gov.v1beta1 initialized!')\n\t\t\tif (rootGetters['common/env/client']) {\n\t\t\t\trootGetters['common/env/client'].on('newblock', () => {\n\t\t\t\t\tdispatch('StoreUpdate')\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tresetState({ commit }) {\n\t\t\tcommit('RESET_STATE')\n\t\t},\n\t\tunsubscribe({ commit }, subscription) {\n\t\t\tcommit('UNSUBSCRIBE', subscription)\n\t\t},\n\t\tasync StoreUpdate({ state, dispatch }) {\n\t\t\tstate._Subscriptions.forEach(async (subscription) => {\n\t\t\t\ttry {\n\t\t\t\t\tawait dispatch(subscription.action, subscription.payload)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new SpVuexError('Subscriptions: ' + e.message)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tasync QueryProposal(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryProposal(key.proposal_id)).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Proposal',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryProposal',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getProposal']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryProposal',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryProposals(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryProposals(query)).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryProposals({\n\t\t\t\t\t\t\t...query,\n\t\t\t\t\t\t\t'pagination.key': value.pagination.nextKey\n\t\t\t\t\t\t})\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Proposals',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryProposals',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getProposals']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryProposals',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryVote(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryVote(key.proposal_id, key.voter))\n\t\t\t\t\t.data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Vote',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryVote',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getVote']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryVote',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryVotes(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryVotes(key.proposal_id, query)).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryVotes(key.proposal_id, {\n\t\t\t\t\t\t\t...query,\n\t\t\t\t\t\t\t'pagination.key': value.pagination.nextKey\n\t\t\t\t\t\t})\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Votes',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryVotes',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getVotes']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryVotes',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryParams(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryParams(key.params_type)).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Params',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryParams',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getParams']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryParams',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryDeposit(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (\n\t\t\t\t\tawait queryClient.queryDeposit(key.proposal_id, key.depositor)\n\t\t\t\t).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Deposit',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryDeposit',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getDeposit']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryDeposit',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryDeposits(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryDeposits(key.proposal_id, query))\n\t\t\t\t\t.data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryDeposits(key.proposal_id, {\n\t\t\t\t\t\t\t...query,\n\t\t\t\t\t\t\t'pagination.key': value.pagination.nextKey\n\t\t\t\t\t\t})\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Deposits',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryDeposits',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getDeposits']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryDeposits',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryTallyResult(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryTallyResult(key.proposal_id)).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'TallyResult',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryTallyResult',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getTallyResult']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryTallyResult',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync sendMsgVote({ rootGetters }, { value, fee = [], memo = '' }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgVote(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgVote:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgVote:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgDeposit({ rootGetters }, { value, fee = [], memo = '' }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgDeposit(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgDeposit:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgDeposit:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgSubmitProposal(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgSubmitProposal(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgSubmitProposal:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgSubmitProposal:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgVote({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgVote(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgVote:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgVote:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgDeposit({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgDeposit(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgDeposit:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgDeposit:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgSubmitProposal({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgSubmitProposal(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgSubmitProposal:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgSubmitProposal:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.crisis.v1beta1';\nconst baseMsgVerifyInvariant = {\n    sender: '',\n    invariantModuleName: '',\n    invariantRoute: ''\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== '') {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== '') {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    }\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.crisis.v1beta1.Msg', 'VerifyInvariant', data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from '@cosmjs/stargate'\nimport { Registry } from '@cosmjs/proto-signing'\nimport { Api } from './rest'\nimport { MsgVerifyInvariant } from './types/cosmos/crisis/v1beta1/tx'\nconst types = [\n\t['/cosmos.crisis.v1beta1.MsgVerifyInvariant', MsgVerifyInvariant]\n]\nexport const MissingWalletError = new Error('wallet is required')\nconst registry = new Registry(types)\nconst defaultFee = {\n\tamount: [],\n\tgas: '200000'\n}\nconst txClient = async (\n\twallet,\n\t{ addr: addr } = { addr: 'http://localhost:26657' }\n) => {\n\tif (!wallet) throw MissingWalletError\n\tconst client = await SigningStargateClient.connectWithSigner(addr, wallet, {\n\t\tregistry\n\t})\n\tconst { address } = (await wallet.getAccounts())[0]\n\treturn {\n\t\tsignAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: '' }) =>\n\t\t\tclient.signAndBroadcast(address, msgs, fee, memo),\n\t\tmsgVerifyInvariant: (data) => ({\n\t\t\ttypeUrl: '/cosmos.crisis.v1beta1.MsgVerifyInvariant',\n\t\t\tvalue: data\n\t\t})\n\t}\n}\nconst queryClient = async (\n\t{ addr: addr } = { addr: 'http://localhost:1317' }\n) => {\n\treturn new Api({ baseUrl: addr })\n}\nexport { txClient, queryClient }\n","import { txClient, queryClient, MissingWalletError } from './module'\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex'\nasync function initTxClient(vuexGetters) {\n\treturn await txClient(vuexGetters['common/wallet/signer'], {\n\t\taddr: vuexGetters['common/env/apiTendermint']\n\t})\n}\nasync function initQueryClient(vuexGetters) {\n\treturn await queryClient({\n\t\taddr: vuexGetters['common/env/apiCosmos']\n\t})\n}\nfunction mergeResults(value, next_values) {\n\tfor (let prop of Object.keys(next_values)) {\n\t\tif (Array.isArray(next_values[prop])) {\n\t\t\tvalue[prop] = [...value[prop], ...next_values[prop]]\n\t\t} else {\n\t\t\tvalue[prop] = next_values[prop]\n\t\t}\n\t}\n\treturn value\n}\nfunction getStructure(template) {\n\tlet structure = { fields: [] }\n\tfor (const [key, value] of Object.entries(template)) {\n\t\tlet field = {}\n\t\tfield.name = key\n\t\tfield.type = typeof value\n\t\tstructure.fields.push(field)\n\t}\n\treturn structure\n}\nconst getDefaultState = () => {\n\treturn {\n\t\t_Structure: {},\n\t\t_Subscriptions: new Set()\n\t}\n}\n// initial state\nconst state = getDefaultState()\nexport default {\n\tnamespaced: true,\n\tstate,\n\tmutations: {\n\t\tRESET_STATE(state) {\n\t\t\tObject.assign(state, getDefaultState())\n\t\t},\n\t\tQUERY(state, { query, key, value }) {\n\t\t\tstate[query][JSON.stringify(key)] = value\n\t\t},\n\t\tSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.add(subscription)\n\t\t},\n\t\tUNSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.delete(subscription)\n\t\t}\n\t},\n\tgetters: {\n\t\tgetTypeStructure: (state) => (type) => {\n\t\t\treturn state._Structure[type].fields\n\t\t}\n\t},\n\tactions: {\n\t\tinit({ dispatch, rootGetters }) {\n\t\t\tconsole.log('Vuex module: cosmos.crisis.v1beta1 initialized!')\n\t\t\tif (rootGetters['common/env/client']) {\n\t\t\t\trootGetters['common/env/client'].on('newblock', () => {\n\t\t\t\t\tdispatch('StoreUpdate')\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tresetState({ commit }) {\n\t\t\tcommit('RESET_STATE')\n\t\t},\n\t\tunsubscribe({ commit }, subscription) {\n\t\t\tcommit('UNSUBSCRIBE', subscription)\n\t\t},\n\t\tasync StoreUpdate({ state, dispatch }) {\n\t\t\tstate._Subscriptions.forEach(async (subscription) => {\n\t\t\t\ttry {\n\t\t\t\t\tawait dispatch(subscription.action, subscription.payload)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new SpVuexError('Subscriptions: ' + e.message)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tasync sendMsgVerifyInvariant(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgVerifyInvariant(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgVerifyInvariant:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgVerifyInvariant:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgVerifyInvariant({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgVerifyInvariant(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgVerifyInvariant:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgVerifyInvariant:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from '@cosmjs/stargate'\nimport { Registry } from '@cosmjs/proto-signing'\nimport { Api } from './rest'\nimport { MsgTransfer } from './types/ibc/applications/transfer/v1/tx'\nconst types = [['/ibc.applications.transfer.v1.MsgTransfer', MsgTransfer]]\nexport const MissingWalletError = new Error('wallet is required')\nconst registry = new Registry(types)\nconst defaultFee = {\n\tamount: [],\n\tgas: '200000'\n}\nconst txClient = async (\n\twallet,\n\t{ addr: addr } = { addr: 'http://localhost:26657' }\n) => {\n\tif (!wallet) throw MissingWalletError\n\tconst client = await SigningStargateClient.connectWithSigner(addr, wallet, {\n\t\tregistry\n\t})\n\tconst { address } = (await wallet.getAccounts())[0]\n\treturn {\n\t\tsignAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: '' }) =>\n\t\t\tclient.signAndBroadcast(address, msgs, fee, memo),\n\t\tmsgTransfer: (data) => ({\n\t\t\ttypeUrl: '/ibc.applications.transfer.v1.MsgTransfer',\n\t\t\tvalue: data\n\t\t})\n\t}\n}\nconst queryClient = async (\n\t{ addr: addr } = { addr: 'http://localhost:1317' }\n) => {\n\treturn new Api({ baseUrl: addr })\n}\nexport { txClient, queryClient }\n","import { txClient, queryClient, MissingWalletError } from './module'\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex'\nimport { FungibleTokenPacketData } from './module/types/ibc/applications/transfer/v1/transfer'\nimport { DenomTrace } from './module/types/ibc/applications/transfer/v1/transfer'\nimport { Params } from './module/types/ibc/applications/transfer/v1/transfer'\nexport { FungibleTokenPacketData, DenomTrace, Params }\nasync function initTxClient(vuexGetters) {\n\treturn await txClient(vuexGetters['common/wallet/signer'], {\n\t\taddr: vuexGetters['common/env/apiTendermint']\n\t})\n}\nasync function initQueryClient(vuexGetters) {\n\treturn await queryClient({\n\t\taddr: vuexGetters['common/env/apiCosmos']\n\t})\n}\nfunction mergeResults(value, next_values) {\n\tfor (let prop of Object.keys(next_values)) {\n\t\tif (Array.isArray(next_values[prop])) {\n\t\t\tvalue[prop] = [...value[prop], ...next_values[prop]]\n\t\t} else {\n\t\t\tvalue[prop] = next_values[prop]\n\t\t}\n\t}\n\treturn value\n}\nfunction getStructure(template) {\n\tlet structure = { fields: [] }\n\tfor (const [key, value] of Object.entries(template)) {\n\t\tlet field = {}\n\t\tfield.name = key\n\t\tfield.type = typeof value\n\t\tstructure.fields.push(field)\n\t}\n\treturn structure\n}\nconst getDefaultState = () => {\n\treturn {\n\t\tDenomTrace: {},\n\t\tDenomTraces: {},\n\t\tParams: {},\n\t\t_Structure: {\n\t\t\tFungibleTokenPacketData: getStructure(\n\t\t\t\tFungibleTokenPacketData.fromPartial({})\n\t\t\t),\n\t\t\tDenomTrace: getStructure(DenomTrace.fromPartial({})),\n\t\t\tParams: getStructure(Params.fromPartial({}))\n\t\t},\n\t\t_Subscriptions: new Set()\n\t}\n}\n// initial state\nconst state = getDefaultState()\nexport default {\n\tnamespaced: true,\n\tstate,\n\tmutations: {\n\t\tRESET_STATE(state) {\n\t\t\tObject.assign(state, getDefaultState())\n\t\t},\n\t\tQUERY(state, { query, key, value }) {\n\t\t\tstate[query][JSON.stringify(key)] = value\n\t\t},\n\t\tSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.add(subscription)\n\t\t},\n\t\tUNSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.delete(subscription)\n\t\t}\n\t},\n\tgetters: {\n\t\tgetDenomTrace: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.DenomTrace[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetDenomTraces: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.DenomTraces[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetParams: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Params[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetTypeStructure: (state) => (type) => {\n\t\t\treturn state._Structure[type].fields\n\t\t}\n\t},\n\tactions: {\n\t\tinit({ dispatch, rootGetters }) {\n\t\t\tconsole.log('Vuex module: ibc.applications.transfer.v1 initialized!')\n\t\t\tif (rootGetters['common/env/client']) {\n\t\t\t\trootGetters['common/env/client'].on('newblock', () => {\n\t\t\t\t\tdispatch('StoreUpdate')\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tresetState({ commit }) {\n\t\t\tcommit('RESET_STATE')\n\t\t},\n\t\tunsubscribe({ commit }, subscription) {\n\t\t\tcommit('UNSUBSCRIBE', subscription)\n\t\t},\n\t\tasync StoreUpdate({ state, dispatch }) {\n\t\t\tstate._Subscriptions.forEach(async (subscription) => {\n\t\t\t\ttry {\n\t\t\t\t\tawait dispatch(subscription.action, subscription.payload)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new SpVuexError('Subscriptions: ' + e.message)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tasync QueryDenomTrace(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryDenomTrace(key.hash)).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'DenomTrace',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryDenomTrace',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getDenomTrace']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryDenomTrace',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryDenomTraces(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryDenomTraces(query)).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryDenomTraces({\n\t\t\t\t\t\t\t...query,\n\t\t\t\t\t\t\t'pagination.key': value.pagination.nextKey\n\t\t\t\t\t\t})\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'DenomTraces',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryDenomTraces',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getDenomTraces']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryDenomTraces',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryParams(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryParams()).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Params',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryParams',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getParams']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryParams',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync sendMsgTransfer({ rootGetters }, { value, fee = [], memo = '' }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgTransfer(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgTransfer:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgTransfer:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgTransfer({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgTransfer(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgTransfer:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgTransfer:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseSendEnabled = { denom: '', enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    }\n};\nconst baseInput = { address: '' };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseOutput = { address: '' };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDenomUnit = { denom: '', exponent: 0, aliases: '' };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMetadata = { description: '', base: '', display: '' };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== '') {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== '') {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== '') {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Input, Output } from '../../../cosmos/bank/v1beta1/bank';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseMsgSend = { fromAddress: '', toAddress: '' };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    }\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'Send', data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'MultiSend', data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from '@cosmjs/stargate'\nimport { Registry } from '@cosmjs/proto-signing'\nimport { Api } from './rest'\nimport { MsgSend } from './types/cosmos/bank/v1beta1/tx'\nimport { MsgMultiSend } from './types/cosmos/bank/v1beta1/tx'\nconst types = [\n\t['/cosmos.bank.v1beta1.MsgSend', MsgSend],\n\t['/cosmos.bank.v1beta1.MsgMultiSend', MsgMultiSend]\n]\nexport const MissingWalletError = new Error('wallet is required')\nconst registry = new Registry(types)\nconst defaultFee = {\n\tamount: [],\n\tgas: '200000'\n}\nconst txClient = async (\n\twallet,\n\t{ addr: addr } = { addr: 'http://localhost:26657' }\n) => {\n\tif (!wallet) throw MissingWalletError\n\tconst client = await SigningStargateClient.connectWithSigner(addr, wallet, {\n\t\tregistry\n\t})\n\tconst { address } = (await wallet.getAccounts())[0]\n\treturn {\n\t\tsignAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: '' }) =>\n\t\t\tclient.signAndBroadcast(address, msgs, fee, memo),\n\t\tmsgSend: (data) => ({\n\t\t\ttypeUrl: '/cosmos.bank.v1beta1.MsgSend',\n\t\t\tvalue: data\n\t\t}),\n\t\tmsgMultiSend: (data) => ({\n\t\t\ttypeUrl: '/cosmos.bank.v1beta1.MsgMultiSend',\n\t\t\tvalue: data\n\t\t})\n\t}\n}\nconst queryClient = async (\n\t{ addr: addr } = { addr: 'http://localhost:1317' }\n) => {\n\treturn new Api({ baseUrl: addr })\n}\nexport { txClient, queryClient }\n","/* eslint-disable */\nimport { Params, Metadata } from '../../../cosmos/bank/v1beta1/bank';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBalance = { address: '' };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module'\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex'\nimport { Params } from './module/types/cosmos/bank/v1beta1/bank'\nimport { SendEnabled } from './module/types/cosmos/bank/v1beta1/bank'\nimport { Input } from './module/types/cosmos/bank/v1beta1/bank'\nimport { Output } from './module/types/cosmos/bank/v1beta1/bank'\nimport { Supply } from './module/types/cosmos/bank/v1beta1/bank'\nimport { DenomUnit } from './module/types/cosmos/bank/v1beta1/bank'\nimport { Metadata } from './module/types/cosmos/bank/v1beta1/bank'\nimport { Balance } from './module/types/cosmos/bank/v1beta1/genesis'\nexport {\n\tParams,\n\tSendEnabled,\n\tInput,\n\tOutput,\n\tSupply,\n\tDenomUnit,\n\tMetadata,\n\tBalance\n}\nasync function initTxClient(vuexGetters) {\n\treturn await txClient(vuexGetters['common/wallet/signer'], {\n\t\taddr: vuexGetters['common/env/apiTendermint']\n\t})\n}\nasync function initQueryClient(vuexGetters) {\n\treturn await queryClient({\n\t\taddr: vuexGetters['common/env/apiCosmos']\n\t})\n}\nfunction mergeResults(value, next_values) {\n\tfor (let prop of Object.keys(next_values)) {\n\t\tif (Array.isArray(next_values[prop])) {\n\t\t\tvalue[prop] = [...value[prop], ...next_values[prop]]\n\t\t} else {\n\t\t\tvalue[prop] = next_values[prop]\n\t\t}\n\t}\n\treturn value\n}\nfunction getStructure(template) {\n\tlet structure = { fields: [] }\n\tfor (const [key, value] of Object.entries(template)) {\n\t\tlet field = {}\n\t\tfield.name = key\n\t\tfield.type = typeof value\n\t\tstructure.fields.push(field)\n\t}\n\treturn structure\n}\nconst getDefaultState = () => {\n\treturn {\n\t\tBalance: {},\n\t\tAllBalances: {},\n\t\tTotalSupply: {},\n\t\tSupplyOf: {},\n\t\tParams: {},\n\t\tDenomMetadata: {},\n\t\tDenomsMetadata: {},\n\t\t_Structure: {\n\t\t\tParams: getStructure(Params.fromPartial({})),\n\t\t\tSendEnabled: getStructure(SendEnabled.fromPartial({})),\n\t\t\tInput: getStructure(Input.fromPartial({})),\n\t\t\tOutput: getStructure(Output.fromPartial({})),\n\t\t\tSupply: getStructure(Supply.fromPartial({})),\n\t\t\tDenomUnit: getStructure(DenomUnit.fromPartial({})),\n\t\t\tMetadata: getStructure(Metadata.fromPartial({})),\n\t\t\tBalance: getStructure(Balance.fromPartial({}))\n\t\t},\n\t\t_Subscriptions: new Set()\n\t}\n}\n// initial state\nconst state = getDefaultState()\nexport default {\n\tnamespaced: true,\n\tstate,\n\tmutations: {\n\t\tRESET_STATE(state) {\n\t\t\tObject.assign(state, getDefaultState())\n\t\t},\n\t\tQUERY(state, { query, key, value }) {\n\t\t\tstate[query][JSON.stringify(key)] = value\n\t\t},\n\t\tSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.add(subscription)\n\t\t},\n\t\tUNSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.delete(subscription)\n\t\t}\n\t},\n\tgetters: {\n\t\tgetBalance: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Balance[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetAllBalances: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.AllBalances[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetTotalSupply: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.TotalSupply[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetSupplyOf: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.SupplyOf[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetParams: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Params[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetDenomMetadata: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.DenomMetadata[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetDenomsMetadata: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.DenomsMetadata[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetTypeStructure: (state) => (type) => {\n\t\t\treturn state._Structure[type].fields\n\t\t}\n\t},\n\tactions: {\n\t\tinit({ dispatch, rootGetters }) {\n\t\t\tconsole.log('Vuex module: cosmos.bank.v1beta1 initialized!')\n\t\t\tif (rootGetters['common/env/client']) {\n\t\t\t\trootGetters['common/env/client'].on('newblock', () => {\n\t\t\t\t\tdispatch('StoreUpdate')\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tresetState({ commit }) {\n\t\t\tcommit('RESET_STATE')\n\t\t},\n\t\tunsubscribe({ commit }, subscription) {\n\t\t\tcommit('UNSUBSCRIBE', subscription)\n\t\t},\n\t\tasync StoreUpdate({ state, dispatch }) {\n\t\t\tstate._Subscriptions.forEach(async (subscription) => {\n\t\t\t\ttry {\n\t\t\t\t\tawait dispatch(subscription.action, subscription.payload)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new SpVuexError('Subscriptions: ' + e.message)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tasync QueryBalance(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryBalance(key.address, key.denom))\n\t\t\t\t\t.data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Balance',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryBalance',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getBalance']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryBalance',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryAllBalances(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryAllBalances(key.address, query))\n\t\t\t\t\t.data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryAllBalances(key.address, {\n\t\t\t\t\t\t\t...query,\n\t\t\t\t\t\t\t'pagination.key': value.pagination.nextKey\n\t\t\t\t\t\t})\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'AllBalances',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryAllBalances',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getAllBalances']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryAllBalances',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryTotalSupply(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryTotalSupply()).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'TotalSupply',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryTotalSupply',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getTotalSupply']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryTotalSupply',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QuerySupplyOf(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.querySupplyOf(key.denom)).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'SupplyOf',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QuerySupplyOf',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getSupplyOf']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QuerySupplyOf',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryParams(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryParams()).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Params',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryParams',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getParams']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryParams',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryDenomMetadata(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryDenomMetadata(key.denom)).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'DenomMetadata',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryDenomMetadata',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getDenomMetadata']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryDenomMetadata',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryDenomsMetadata(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryDenomsMetadata(query)).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryDenomsMetadata({\n\t\t\t\t\t\t\t...query,\n\t\t\t\t\t\t\t'pagination.key': value.pagination.nextKey\n\t\t\t\t\t\t})\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'DenomsMetadata',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryDenomsMetadata',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryDenomsMetadata',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync sendMsgSend({ rootGetters }, { value, fee = [], memo = '' }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgSend(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgSend:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgSend:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync sendMsgMultiSend({ rootGetters }, { value, fee = [], memo = '' }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgMultiSend(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgMultiSend:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgMultiSend:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgSend({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgSend(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgSend:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgSend:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgMultiSend({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgMultiSend(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgMultiSend:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgMultiSend:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseMsgUnjail = { validatorAddr: '' };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== '') {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request('cosmos.slashing.v1beta1.Msg', 'Unjail', data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from '@cosmjs/stargate'\nimport { Registry } from '@cosmjs/proto-signing'\nimport { Api } from './rest'\nimport { MsgUnjail } from './types/cosmos/slashing/v1beta1/tx'\nconst types = [['/cosmos.slashing.v1beta1.MsgUnjail', MsgUnjail]]\nexport const MissingWalletError = new Error('wallet is required')\nconst registry = new Registry(types)\nconst defaultFee = {\n\tamount: [],\n\tgas: '200000'\n}\nconst txClient = async (\n\twallet,\n\t{ addr: addr } = { addr: 'http://localhost:26657' }\n) => {\n\tif (!wallet) throw MissingWalletError\n\tconst client = await SigningStargateClient.connectWithSigner(addr, wallet, {\n\t\tregistry\n\t})\n\tconst { address } = (await wallet.getAccounts())[0]\n\treturn {\n\t\tsignAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: '' }) =>\n\t\t\tclient.signAndBroadcast(address, msgs, fee, memo),\n\t\tmsgUnjail: (data) => ({\n\t\t\ttypeUrl: '/cosmos.slashing.v1beta1.MsgUnjail',\n\t\t\tvalue: data\n\t\t})\n\t}\n}\nconst queryClient = async (\n\t{ addr: addr } = { addr: 'http://localhost:1317' }\n) => {\n\treturn new Api({ baseUrl: addr })\n}\nexport { txClient, queryClient }\n","import { txClient, queryClient, MissingWalletError } from './module'\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex'\nimport { SigningInfo } from './module/types/cosmos/slashing/v1beta1/genesis'\nimport { ValidatorMissedBlocks } from './module/types/cosmos/slashing/v1beta1/genesis'\nimport { MissedBlock } from './module/types/cosmos/slashing/v1beta1/genesis'\nimport { ValidatorSigningInfo } from './module/types/cosmos/slashing/v1beta1/slashing'\nimport { Params } from './module/types/cosmos/slashing/v1beta1/slashing'\nexport {\n\tSigningInfo,\n\tValidatorMissedBlocks,\n\tMissedBlock,\n\tValidatorSigningInfo,\n\tParams\n}\nasync function initTxClient(vuexGetters) {\n\treturn await txClient(vuexGetters['common/wallet/signer'], {\n\t\taddr: vuexGetters['common/env/apiTendermint']\n\t})\n}\nasync function initQueryClient(vuexGetters) {\n\treturn await queryClient({\n\t\taddr: vuexGetters['common/env/apiCosmos']\n\t})\n}\nfunction mergeResults(value, next_values) {\n\tfor (let prop of Object.keys(next_values)) {\n\t\tif (Array.isArray(next_values[prop])) {\n\t\t\tvalue[prop] = [...value[prop], ...next_values[prop]]\n\t\t} else {\n\t\t\tvalue[prop] = next_values[prop]\n\t\t}\n\t}\n\treturn value\n}\nfunction getStructure(template) {\n\tlet structure = { fields: [] }\n\tfor (const [key, value] of Object.entries(template)) {\n\t\tlet field = {}\n\t\tfield.name = key\n\t\tfield.type = typeof value\n\t\tstructure.fields.push(field)\n\t}\n\treturn structure\n}\nconst getDefaultState = () => {\n\treturn {\n\t\tParams: {},\n\t\tSigningInfo: {},\n\t\tSigningInfos: {},\n\t\t_Structure: {\n\t\t\tSigningInfo: getStructure(SigningInfo.fromPartial({})),\n\t\t\tValidatorMissedBlocks: getStructure(\n\t\t\t\tValidatorMissedBlocks.fromPartial({})\n\t\t\t),\n\t\t\tMissedBlock: getStructure(MissedBlock.fromPartial({})),\n\t\t\tValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n\t\t\tParams: getStructure(Params.fromPartial({}))\n\t\t},\n\t\t_Subscriptions: new Set()\n\t}\n}\n// initial state\nconst state = getDefaultState()\nexport default {\n\tnamespaced: true,\n\tstate,\n\tmutations: {\n\t\tRESET_STATE(state) {\n\t\t\tObject.assign(state, getDefaultState())\n\t\t},\n\t\tQUERY(state, { query, key, value }) {\n\t\t\tstate[query][JSON.stringify(key)] = value\n\t\t},\n\t\tSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.add(subscription)\n\t\t},\n\t\tUNSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.delete(subscription)\n\t\t}\n\t},\n\tgetters: {\n\t\tgetParams: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Params[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetSigningInfo: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.SigningInfo[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetSigningInfos: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.SigningInfos[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetTypeStructure: (state) => (type) => {\n\t\t\treturn state._Structure[type].fields\n\t\t}\n\t},\n\tactions: {\n\t\tinit({ dispatch, rootGetters }) {\n\t\t\tconsole.log('Vuex module: cosmos.slashing.v1beta1 initialized!')\n\t\t\tif (rootGetters['common/env/client']) {\n\t\t\t\trootGetters['common/env/client'].on('newblock', () => {\n\t\t\t\t\tdispatch('StoreUpdate')\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tresetState({ commit }) {\n\t\t\tcommit('RESET_STATE')\n\t\t},\n\t\tunsubscribe({ commit }, subscription) {\n\t\t\tcommit('UNSUBSCRIBE', subscription)\n\t\t},\n\t\tasync StoreUpdate({ state, dispatch }) {\n\t\t\tstate._Subscriptions.forEach(async (subscription) => {\n\t\t\t\ttry {\n\t\t\t\t\tawait dispatch(subscription.action, subscription.payload)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new SpVuexError('Subscriptions: ' + e.message)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tasync QueryParams(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryParams()).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Params',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryParams',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getParams']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryParams',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QuerySigningInfo(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.querySigningInfo(key.cons_address)).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'SigningInfo',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QuerySigningInfo',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getSigningInfo']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QuerySigningInfo',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QuerySigningInfos(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.querySigningInfos(query)).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.querySigningInfos({\n\t\t\t\t\t\t\t...query,\n\t\t\t\t\t\t\t'pagination.key': value.pagination.nextKey\n\t\t\t\t\t\t})\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'SigningInfos',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QuerySigningInfos',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getSigningInfos']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QuerySigningInfos',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync sendMsgUnjail({ rootGetters }, { value, fee = [], memo = '' }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgUnjail(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgUnjail:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgUnjail:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgUnjail({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgUnjail(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgUnjail:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgUnjail:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/evidence.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from '@cosmjs/stargate'\nimport { Registry } from '@cosmjs/proto-signing'\nimport { Api } from './rest'\nimport { MsgSubmitEvidence } from './types/cosmos/evidence/v1beta1/tx'\nconst types = [\n\t['/cosmos.evidence.v1beta1.MsgSubmitEvidence', MsgSubmitEvidence]\n]\nexport const MissingWalletError = new Error('wallet is required')\nconst registry = new Registry(types)\nconst defaultFee = {\n\tamount: [],\n\tgas: '200000'\n}\nconst txClient = async (\n\twallet,\n\t{ addr: addr } = { addr: 'http://localhost:26657' }\n) => {\n\tif (!wallet) throw MissingWalletError\n\tconst client = await SigningStargateClient.connectWithSigner(addr, wallet, {\n\t\tregistry\n\t})\n\tconst { address } = (await wallet.getAccounts())[0]\n\treturn {\n\t\tsignAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: '' }) =>\n\t\t\tclient.signAndBroadcast(address, msgs, fee, memo),\n\t\tmsgSubmitEvidence: (data) => ({\n\t\t\ttypeUrl: '/cosmos.evidence.v1beta1.MsgSubmitEvidence',\n\t\t\tvalue: data\n\t\t})\n\t}\n}\nconst queryClient = async (\n\t{ addr: addr } = { addr: 'http://localhost:1317' }\n) => {\n\treturn new Api({ baseUrl: addr })\n}\nexport { txClient, queryClient }\n","import { txClient, queryClient, MissingWalletError } from './module'\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex'\nimport { Equivocation } from './module/types/cosmos/evidence/v1beta1/evidence'\nexport { Equivocation }\nasync function initTxClient(vuexGetters) {\n\treturn await txClient(vuexGetters['common/wallet/signer'], {\n\t\taddr: vuexGetters['common/env/apiTendermint']\n\t})\n}\nasync function initQueryClient(vuexGetters) {\n\treturn await queryClient({\n\t\taddr: vuexGetters['common/env/apiCosmos']\n\t})\n}\nfunction mergeResults(value, next_values) {\n\tfor (let prop of Object.keys(next_values)) {\n\t\tif (Array.isArray(next_values[prop])) {\n\t\t\tvalue[prop] = [...value[prop], ...next_values[prop]]\n\t\t} else {\n\t\t\tvalue[prop] = next_values[prop]\n\t\t}\n\t}\n\treturn value\n}\nfunction getStructure(template) {\n\tlet structure = { fields: [] }\n\tfor (const [key, value] of Object.entries(template)) {\n\t\tlet field = {}\n\t\tfield.name = key\n\t\tfield.type = typeof value\n\t\tstructure.fields.push(field)\n\t}\n\treturn structure\n}\nconst getDefaultState = () => {\n\treturn {\n\t\tEvidence: {},\n\t\tAllEvidence: {},\n\t\t_Structure: {\n\t\t\tEquivocation: getStructure(Equivocation.fromPartial({}))\n\t\t},\n\t\t_Subscriptions: new Set()\n\t}\n}\n// initial state\nconst state = getDefaultState()\nexport default {\n\tnamespaced: true,\n\tstate,\n\tmutations: {\n\t\tRESET_STATE(state) {\n\t\t\tObject.assign(state, getDefaultState())\n\t\t},\n\t\tQUERY(state, { query, key, value }) {\n\t\t\tstate[query][JSON.stringify(key)] = value\n\t\t},\n\t\tSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.add(subscription)\n\t\t},\n\t\tUNSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.delete(subscription)\n\t\t}\n\t},\n\tgetters: {\n\t\tgetEvidence: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.Evidence[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetAllEvidence: (state) => (params = { params: {} }) => {\n\t\t\tif (!params.query) {\n\t\t\t\tparams.query = null\n\t\t\t}\n\t\t\treturn state.AllEvidence[JSON.stringify(params)] ?? {}\n\t\t},\n\t\tgetTypeStructure: (state) => (type) => {\n\t\t\treturn state._Structure[type].fields\n\t\t}\n\t},\n\tactions: {\n\t\tinit({ dispatch, rootGetters }) {\n\t\t\tconsole.log('Vuex module: cosmos.evidence.v1beta1 initialized!')\n\t\t\tif (rootGetters['common/env/client']) {\n\t\t\t\trootGetters['common/env/client'].on('newblock', () => {\n\t\t\t\t\tdispatch('StoreUpdate')\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tresetState({ commit }) {\n\t\t\tcommit('RESET_STATE')\n\t\t},\n\t\tunsubscribe({ commit }, subscription) {\n\t\t\tcommit('UNSUBSCRIBE', subscription)\n\t\t},\n\t\tasync StoreUpdate({ state, dispatch }) {\n\t\t\tstate._Subscriptions.forEach(async (subscription) => {\n\t\t\t\ttry {\n\t\t\t\t\tawait dispatch(subscription.action, subscription.payload)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new SpVuexError('Subscriptions: ' + e.message)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tasync QueryEvidence(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryEvidence(key.evidence_hash)).data\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'Evidence',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryEvidence',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getEvidence']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryEvidence',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync QueryAllEvidence(\n\t\t\t{ commit, rootGetters, getters },\n\t\t\t{\n\t\t\t\toptions: { subscribe, all } = { subscribe: false, all: false },\n\t\t\t\tparams: { ...key },\n\t\t\t\tquery = null\n\t\t\t}\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst queryClient = await initQueryClient(rootGetters)\n\t\t\t\tlet value = (await queryClient.queryAllEvidence(query)).data\n\t\t\t\twhile (all && value.pagination && value.pagination.nextKey != null) {\n\t\t\t\t\tlet next_values = (\n\t\t\t\t\t\tawait queryClient.queryAllEvidence({\n\t\t\t\t\t\t\t...query,\n\t\t\t\t\t\t\t'pagination.key': value.pagination.nextKey\n\t\t\t\t\t\t})\n\t\t\t\t\t).data\n\t\t\t\t\tvalue = mergeResults(value, next_values)\n\t\t\t\t}\n\t\t\t\tcommit('QUERY', {\n\t\t\t\t\tquery: 'AllEvidence',\n\t\t\t\t\tkey: { params: { ...key }, query },\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tif (subscribe)\n\t\t\t\t\tcommit('SUBSCRIBE', {\n\t\t\t\t\t\taction: 'QueryAllEvidence',\n\t\t\t\t\t\tpayload: { options: { all }, params: { ...key }, query }\n\t\t\t\t\t})\n\t\t\t\treturn getters['getAllEvidence']({ params: { ...key }, query }) ?? {}\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'QueryClient:QueryAllEvidence',\n\t\t\t\t\t'API Node Unavailable. Could not perform query: ' + e.message\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t\tasync sendMsgSubmitEvidence(\n\t\t\t{ rootGetters },\n\t\t\t{ value, fee = [], memo = '' }\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgSubmitEvidence(value)\n\t\t\t\tconst result = await txClient.signAndBroadcast([msg], {\n\t\t\t\t\tfee: { amount: fee, gas: '200000' },\n\t\t\t\t\tmemo\n\t\t\t\t})\n\t\t\t\treturn result\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgSubmitEvidence:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgSubmitEvidence:Send',\n\t\t\t\t\t\t'Could not broadcast Tx: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync MsgSubmitEvidence({ rootGetters }, { value }) {\n\t\t\ttry {\n\t\t\t\tconst txClient = await initTxClient(rootGetters)\n\t\t\t\tconst msg = await txClient.msgSubmitEvidence(value)\n\t\t\t\treturn msg\n\t\t\t} catch (e) {\n\t\t\t\tif (e == MissingWalletError) {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgSubmitEvidence:Init',\n\t\t\t\t\t\t'Could not initialize signing client. Wallet is required.'\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t'TxClient:MsgSubmitEvidence:Create',\n\t\t\t\t\t\t'Could not create message: ' + e.message\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1'\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1'\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1'\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1'\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1'\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1'\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1'\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1'\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1'\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1'\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1'\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1'\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1'\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1'\nexport default {\n\tCosmosCosmosSdkCosmosVestingV1Beta1: load(\n\t\tCosmosCosmosSdkCosmosVestingV1Beta1,\n\t\t'cosmos.vesting.v1beta1'\n\t),\n\tCosmosCosmosSdkIbcCoreChannelV1: load(\n\t\tCosmosCosmosSdkIbcCoreChannelV1,\n\t\t'ibc.core.channel.v1'\n\t),\n\tCosmosCosmosSdkCosmosDistributionV1Beta1: load(\n\t\tCosmosCosmosSdkCosmosDistributionV1Beta1,\n\t\t'cosmos.distribution.v1beta1'\n\t),\n\tCosmosCosmosSdkIbcCoreConnectionV1: load(\n\t\tCosmosCosmosSdkIbcCoreConnectionV1,\n\t\t'ibc.core.connection.v1'\n\t),\n\tCosmosCosmosSdkCosmosStakingV1Beta1: load(\n\t\tCosmosCosmosSdkCosmosStakingV1Beta1,\n\t\t'cosmos.staking.v1beta1'\n\t),\n\tCosmosCosmosSdkIbcCoreClientV1: load(\n\t\tCosmosCosmosSdkIbcCoreClientV1,\n\t\t'ibc.core.client.v1'\n\t),\n\tCosmosCosmosSdkCosmosBaseAbciV1Beta1: load(\n\t\tCosmosCosmosSdkCosmosBaseAbciV1Beta1,\n\t\t'cosmos.base.abci.v1beta1'\n\t),\n\tCosmosCosmosSdkCosmosBaseV1Beta1: load(\n\t\tCosmosCosmosSdkCosmosBaseV1Beta1,\n\t\t'cosmos.base.v1beta1'\n\t),\n\tCosmosCosmosSdkCosmosGovV1Beta1: load(\n\t\tCosmosCosmosSdkCosmosGovV1Beta1,\n\t\t'cosmos.gov.v1beta1'\n\t),\n\tCosmosCosmosSdkCosmosCrisisV1Beta1: load(\n\t\tCosmosCosmosSdkCosmosCrisisV1Beta1,\n\t\t'cosmos.crisis.v1beta1'\n\t),\n\tCosmosCosmosSdkIbcApplicationsTransferV1: load(\n\t\tCosmosCosmosSdkIbcApplicationsTransferV1,\n\t\t'ibc.applications.transfer.v1'\n\t),\n\tCosmosCosmosSdkCosmosBankV1Beta1: load(\n\t\tCosmosCosmosSdkCosmosBankV1Beta1,\n\t\t'cosmos.bank.v1beta1'\n\t),\n\tCosmosCosmosSdkCosmosSlashingV1Beta1: load(\n\t\tCosmosCosmosSdkCosmosSlashingV1Beta1,\n\t\t'cosmos.slashing.v1beta1'\n\t),\n\tCosmosCosmosSdkCosmosEvidenceV1Beta1: load(\n\t\tCosmosCosmosSdkCosmosEvidenceV1Beta1,\n\t\t'cosmos.evidence.v1beta1'\n\t)\n}\nfunction load(mod, fullns) {\n\treturn function init(store) {\n\t\tif (store.hasModule([fullns])) {\n\t\t\tthrow new Error('Duplicate module name detected: ' + fullns)\n\t\t} else {\n\t\t\tstore.registerModule([fullns], mod)\n\t\t\tstore.subscribe((mutation) => {\n\t\t\t\tif (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n\t\t\t\t\tstore.dispatch(fullns + '/init', null, {\n\t\t\t\t\t\troot: true\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedChannel, PacketState } from '../../../../ibc/core/channel/v1/channel';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    }\n};\nconst basePacketSequence = { portId: '', channelId: '', sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, ValidatorSigningInfo } from '../../../cosmos/slashing/v1beta1/slashing';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSigningInfo = { address: '' };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorMissedBlocks = { address: '' };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { MerklePrefix } from '../../../../ibc/core/commitment/v1/commitment';\nexport const protobufPackage = 'ibc.core.connection.v1';\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseConnectionEnd = { clientId: '', state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseIdentifiedConnection = {\n    id: '',\n    clientId: '',\n    state: 0,\n    delayPeriod: 0\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { clientId: '', connectionId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== '') {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientPaths = { paths: '' };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConnectionPaths = { clientId: '', paths: '' };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersion = { identifier: '', features: '' };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== '') {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin, Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseParams = {\n    communityTax: '',\n    baseProposerReward: '',\n    bonusProposerReward: '',\n    withdrawAddrEnabled: false\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== '') {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== '') {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== '') {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: '' };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== '') {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposal = {\n    title: '',\n    description: '',\n    recipient: ''\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: '',\n    height: 0\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== '') {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseDelegationDelegatorReward = { validatorAddress: '' };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: '',\n    description: '',\n    recipient: '',\n    amount: '',\n    deposit: ''\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== '') {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== '') {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseValidatorSigningInfo = {\n    address: '',\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined && (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined && (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseMsgSubmitEvidence = { submitter: '' };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== '') {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request('cosmos.evidence.v1beta1.Msg', 'SubmitEvidence', data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin } from '../../../cosmos/base/v1beta1/coin';\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool } from '../../../cosmos/distribution/v1beta1/distribution';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: '' };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: ''\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: '',\n    period: 0\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: '' };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: '',\n    height: 0,\n    period: 0\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    }\n};\nconst baseGenesisState = { previousProposer: '' };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== '') {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseMsgCreateVestingAccount = {\n    fromAddress: '',\n    toAddress: '',\n    endTime: 0,\n    delayed: false\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request('cosmos.vesting.v1beta1.Msg', 'CreateVestingAccount', data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Channel, Packet } from '../../../../ibc/core/channel/v1/channel';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseMsgChannelOpenInit = { portId: '', signer: '' };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenTry = {\n    portId: '',\n    previousChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== '') {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenAck = {\n    portId: '',\n    channelId: '',\n    counterpartyChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== '') {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseInit = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgRecvPacket = { signer: '' };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    }\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    }\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    }\n};\nconst baseMsgAcknowledgement = { signer: '' };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenInit', data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenTry', data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenAck', data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenConfirm', data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseInit', data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseConfirm', data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'RecvPacket', data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Timeout', data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'TimeoutOnClose', data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Acknowledgement', data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.auth.v1beta1';\nconst baseBaseAccount = { address: '', accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nconst baseModuleAccount = { name: '', permissions: '' };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'VOTE_OPTION_UNSPECIFIED':\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case 'VOTE_OPTION_YES':\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case 'VOTE_OPTION_ABSTAIN':\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case 'VOTE_OPTION_NO':\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case 'VOTE_OPTION_NO_WITH_VETO':\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return 'VOTE_OPTION_UNSPECIFIED';\n        case VoteOption.VOTE_OPTION_YES:\n            return 'VOTE_OPTION_YES';\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return 'VOTE_OPTION_ABSTAIN';\n        case VoteOption.VOTE_OPTION_NO:\n            return 'VOTE_OPTION_NO';\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return 'VOTE_OPTION_NO_WITH_VETO';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'PROPOSAL_STATUS_UNSPECIFIED':\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case 'PROPOSAL_STATUS_DEPOSIT_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case 'PROPOSAL_STATUS_VOTING_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case 'PROPOSAL_STATUS_PASSED':\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case 'PROPOSAL_STATUS_REJECTED':\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case 'PROPOSAL_STATUS_FAILED':\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return 'PROPOSAL_STATUS_UNSPECIFIED';\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return 'PROPOSAL_STATUS_DEPOSIT_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return 'PROPOSAL_STATUS_VOTING_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return 'PROPOSAL_STATUS_PASSED';\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return 'PROPOSAL_STATUS_REJECTED';\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return 'PROPOSAL_STATUS_FAILED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseTextProposal = { title: '', description: '' };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nconst baseDeposit = { proposalId: 0, depositor: '' };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyResult = { yes: '', abstain: '', no: '', noWithVeto: '' };\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== '') {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== '') {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== '') {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== '') {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    }\n};\nconst baseVote = { proposalId: 0, voter: '', option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseFungibleTokenPacketData = {\n    denom: '',\n    amount: 0,\n    sender: '',\n    receiver: ''\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    }\n};\nconst baseDenomTrace = { path: '', baseDenom: '' };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== '') {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    }\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined && (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedClientState, ClientConsensusStates, Params } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    }\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseIdentifiedGenesisMetadata = { clientId: '' };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Counterparty, Version } from '../../../../ibc/core/connection/v1/connection';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.connection.v1';\nconst baseMsgConnectionOpenInit = {\n    clientId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: '',\n    previousConnectionId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== '') {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: '',\n    counterpartyConnectionId: '',\n    signer: ''\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== '') {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: '', signer: '' };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenInit', data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenTry', data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenAck', data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenConfirm', data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation } from '../../../cosmos/staking/v1beta1/staking';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    }\n};\nconst baseLastValidatorPower = { address: '', power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from '../../../../confio/proofs';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.core.commitment.v1';\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePath = { keyPath: '' };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ics23';\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_HASH':\n            return HashOp.NO_HASH;\n        case 1:\n        case 'SHA256':\n            return HashOp.SHA256;\n        case 2:\n        case 'SHA512':\n            return HashOp.SHA512;\n        case 3:\n        case 'KECCAK':\n            return HashOp.KECCAK;\n        case 4:\n        case 'RIPEMD160':\n            return HashOp.RIPEMD160;\n        case 5:\n        case 'BITCOIN':\n            return HashOp.BITCOIN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return 'NO_HASH';\n        case HashOp.SHA256:\n            return 'SHA256';\n        case HashOp.SHA512:\n            return 'SHA512';\n        case HashOp.KECCAK:\n            return 'KECCAK';\n        case HashOp.RIPEMD160:\n            return 'RIPEMD160';\n        case HashOp.BITCOIN:\n            return 'BITCOIN';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_PREFIX':\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case 'VAR_PROTO':\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case 'VAR_RLP':\n            return LengthOp.VAR_RLP;\n        case 3:\n        case 'FIXED32_BIG':\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case 'FIXED32_LITTLE':\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case 'FIXED64_BIG':\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case 'FIXED64_LITTLE':\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case 'REQUIRE_32_BYTES':\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case 'REQUIRE_64_BYTES':\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return 'NO_PREFIX';\n        case LengthOp.VAR_PROTO:\n            return 'VAR_PROTO';\n        case LengthOp.VAR_RLP:\n            return 'VAR_RLP';\n        case LengthOp.FIXED32_BIG:\n            return 'FIXED32_BIG';\n        case LengthOp.FIXED32_LITTLE:\n            return 'FIXED32_LITTLE';\n        case LengthOp.FIXED64_BIG:\n            return 'FIXED64_BIG';\n        case LengthOp.FIXED64_LITTLE:\n            return 'FIXED64_LITTLE';\n        case LengthOp.REQUIRE_32_BYTES:\n            return 'REQUIRE_32_BYTES';\n        case LengthOp.REQUIRE_64_BYTES:\n            return 'REQUIRE_64_BYTES';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch ? BatchProof.toJSON(message.batch) : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    }\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    }\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    }\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Event } from '../../../../tendermint/abci/types';\nexport const protobufPackage = 'cosmos.base.abci.v1beta1';\nconst baseTxResponse = {\n    height: 0,\n    txhash: '',\n    codespace: '',\n    code: 0,\n    data: '',\n    rawLog: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: ''\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== '') {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== '') {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== '') {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== '') {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    }\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: '' };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseStringEvent = { type: '' };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseAttribute = { key: '', value: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    }\n};\nconst baseResult = { log: '' };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgData = { msgType: '' };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== '') {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../../cosmos/base/v1beta1/coin';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseMsgTransfer = {\n    sourcePort: '',\n    sourceChannel: '',\n    sender: '',\n    receiver: '',\n    timeoutTimestamp: 0\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== '') {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request('ibc.applications.transfer.v1.Msg', 'Transfer', data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON } from '../../../cosmos/gov/v1beta1/gov';\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\nconst baseMsgSubmitProposal = { proposer: '' };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== '') {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVote = { proposalId: 0, voter: '', option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    }\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: '' };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'SubmitProposal', data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Vote', data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Deposit', data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n"],"sourceRoot":""}